/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'sk82_na_zd.xex'
*/

struct _GUID;
struct D3DBaseTexture;
struct D3DVertexDeclaration;
struct IUnknown_vtbl;
struct D3DDevice;
struct ID3DXBuffer;
struct D3DSurface;
struct EA::Allocator::ICoreAllocator_vtbl;
struct rw::IResourceAllocator;
struct dataiterator::LocalExtents;
struct renderengine::VirtualDevice::VirtualVertexIterator_vtbl;
struct renderengine::VirtualDevice::VirtualBatchIterator_vtbl;
struct renderengine::Device::LockedFrontBuffer;
struct renderengine::ProgramVariableState;
struct renderengine::Texture;
struct renderengine::ViewportParameters;
struct renderengine::ScissorRectParameters;
struct renderengine::DrawIndexedInstancedParameters;
struct renderengine::DrawInstancedParameters;
struct renderengine::ClearColorParameters;
struct renderengine::ClearDepthStencilParameters;
struct renderengine::FloatShaderStateIterator;
struct renderengine::Device::DirectDraw::Parameters;
struct renderengine::VirtualDevice_vtbl;
struct rw::graphics::imageoperate::ISupportedFormats_vtbl;

/* 1011 */
enum renderengine::VertexFormat : __int32
{
  VERTEXFORMAT_FLOAT1 = 0x2C83A4,
  VERTEXFORMAT_FLOAT2 = 0x2C23A5,
  VERTEXFORMAT_FLOAT3 = 0x2A23B9,
  VERTEXFORMAT_FLOAT4 = 0x1A23A6,
  VERTEXFORMAT_INT1 = 0x2C83A1,
  VERTEXFORMAT_INT2 = 0x2C23A2,
  VERTEXFORMAT_INT4 = 0x1A23A3,
  VERTEXFORMAT_UINT1 = 0x2C82A1,
  VERTEXFORMAT_UINT2 = 0x2C22A2,
  VERTEXFORMAT_UINT4 = 0x1A22A3,
  VERTEXFORMAT_INT1N = 0x2C81A1,
  VERTEXFORMAT_INT2N = 0x2C21A2,
  VERTEXFORMAT_INT4N = 0x1A21A3,
  VERTEXFORMAT_UINT1N = 0x2C80A1,
  VERTEXFORMAT_UINT2N = 0x2C20A2,
  VERTEXFORMAT_UINT4N = 0x1A20A3,
  VERTEXFORMAT_D3DCOLOR = 0x182886,
  VERTEXFORMAT_UBYTE4 = 0x1A2286,
  VERTEXFORMAT_BYTE4 = 0x1A2386,
  VERTEXFORMAT_UBYTE4N = 0x1A2086,
  VERTEXFORMAT_BYTE4N = 0x1A2186,
  VERTEXFORMAT_SHORT2 = 0x2C2359,
  VERTEXFORMAT_SHORT4 = 0x1A235A,
  VERTEXFORMAT_USHORT2 = 0x2C2259,
  VERTEXFORMAT_USHORT4 = 0x1A225A,
  VERTEXFORMAT_SHORT2N = 0x2C2159,
  VERTEXFORMAT_SHORT4N = 0x1A215A,
  VERTEXFORMAT_USHORT2N = 0x2C2059,
  VERTEXFORMAT_USHORT4N = 0x1A205A,
  VERTEXFORMAT_UDEC3 = 0x2A2287,
  VERTEXFORMAT_DEC3 = 0x2A2387,
  VERTEXFORMAT_UDEC3N = 0x2A2087,
  VERTEXFORMAT_DEC3N = 0x2A2187,
  VERTEXFORMAT_UDEC4 = 0x1A2287,
  VERTEXFORMAT_DEC4 = 0x1A2387,
  VERTEXFORMAT_UDEC4N = 0x1A2087,
  VERTEXFORMAT_DEC4N = 0x1A2187,
  VERTEXFORMAT_UHEND3 = 0x2A2290,
  VERTEXFORMAT_HEND3 = 0x2A2390,
  VERTEXFORMAT_UHEND3N = 0x2A2090,
  VERTEXFORMAT_HEND3N = 0x2A2190,
  VERTEXFORMAT_UDHEN3 = 0x2A2291,
  VERTEXFORMAT_DHEN3 = 0x2A2391,
  VERTEXFORMAT_UDHEN3N = 0x2A2091,
  VERTEXFORMAT_DHEN3N = 0x2A2191,
  VERTEXFORMAT_FLOAT16_2 = 0x2C235F,
  VERTEXFORMAT_FLOAT16_4 = 0x1A2360,
  VERTEXFORMAT_COLOR = 0x14C86,
  VERTEXFORMAT_UNUSED = 0xFFFFFFFF,
  VERTEXFORMAT_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1108 */
enum renderengine::PrimitiveType : __int32
{
  PRIMITIVETYPE_NA = 0x0,
  PRIMITIVETYPE_POINTS = 0x1,
  PRIMITIVETYPE_LINES = 0x2,
  PRIMITIVETYPE_LINESTRIP = 0x3,
  PRIMITIVETYPE_TRIANGLES = 0x4,
  PRIMITIVETYPE_TRIANGLEFAN = 0x5,
  PRIMITIVETYPE_TRIANGLESTRIPS = 0x6,
  PRIMITIVETYPE_RECTS = 0x8,
  PRIMITIVETYPE_QUADS = 0xD,
  PRIMITIVETYPE_LINEPATCH = 0x10,
  PRIMITIVETYPE_TRIPATCH = 0x11,
  PRIMITIVETYPE_QUADPATCH = 0x12,
  PRIMITIVETYPE_MAX = 0x13,
  PRIMITIVETYPE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1230 */
enum renderengine::SamplerState::AddressingMode : __int32
{
  ADDRESSINGMODE_WRAP = 0x0,
  ADDRESSINGMODE_MIRROR = 0x1,
  ADDRESSINGMODE_CLAMP = 0x2,
  ADDRESSINGMODE_MIRRORONCE = 0x3,
  ADDRESSINGMODE_BORDER = 0x6,
  ADDRESSINGMODE_BORDER_HALF = 0x4,
  ADDRESSINGMODE_MIRRORONCE_BORDER_HALF = 0x5,
  ADDRESSINGMODE_MIRRORONCE_BORDER = 0x7,
  ADDRESSINGMODE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1231 */
enum renderengine::SamplerState::FilterMode : __int32
{
  FILTERMODE_NA = 0x2,
  FILTERMODE_NONE = 0x2,
  FILTERMODE_NEAREST = 0x0,
  FILTERMODE_LINEAR = 0x1,
  FILTERMODE_ANISOTROPIC = 0x4,
  FILTERMODE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1299 */
enum renderengine::DepthStencilState::Function : __int32
{
  FUNCTION_NEVER = 0x0,
  FUNCTION_LESS = 0x1,
  FUNCTION_EQUAL = 0x2,
  FUNCTION_LESSEQUAL = 0x3,
  FUNCTION_GREATER = 0x4,
  FUNCTION_NOTEQUAL = 0x5,
  FUNCTION_GREATEREQUAL = 0x6,
  FUNCTION_ALWAYS = 0x7,
  FUNCTION_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1300 */
enum renderengine::DepthStencilState::StencilOperation : __int32
{
  STENCILOPERATION_KEEP = 0x0,
  STENCILOPERATION_ZERO = 0x1,
  STENCILOPERATION_REPLACE = 0x2,
  STENCILOPERATION_INCRSAT = 0x3,
  STENCILOPERATION_DECRSAT = 0x4,
  STENCILOPERATION_INVERT = 0x5,
  STENCILOPERATION_INCR = 0x6,
  STENCILOPERATION_DECR = 0x7,
  STENCILOPERATION_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1301 */
enum renderengine::ProgramVariableHandle::DataType : __int32
{
  DATATYPE_BOOL = 0x0,
  DATATYPE_INT = 0x1,
  DATATYPE_FLOAT = 0x2,
  DATATYPE_SAMPLER = 0x3,
  DATATYPE_NA = 0x4,
  DATATYPE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1302 */
enum renderengine::ProgramBuffer::Type : __int32
{
  TYPE_NA = 0xFFFFFFFF,
  TYPE_VERTEX = 0x0,
  TYPE_PIXEL = 0x1,
  TYPE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1303 */
enum renderengine::RenderTargetState::TargetID : __int32
{
  TARGETID_NA = 0xFFFFFFFF,
  TARGETID_COLOR0 = 0x0,
  TARGETID_COLOR1 = 0x1,
  TARGETID_COLOR2 = 0x2,
  TARGETID_COLOR3 = 0x3,
  TARGETID_COLOR_ALL = 0x4,
  TARGETID_DEPTHSTENCIL = 0x5,
  TARGETID_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1304 */
enum renderengine::PixelFormat : __int32
{
  PIXELFORMAT_DXT1 = 0x1A200152,
  PIXELFORMAT_LIN_DXT1 = 0x1A200052,
  PIXELFORMAT_DXT2 = 0x1A200153,
  PIXELFORMAT_LIN_DXT2 = 0x1A200053,
  PIXELFORMAT_DXT3 = 0x1A200153,
  PIXELFORMAT_LIN_DXT3 = 0x1A200053,
  PIXELFORMAT_DXT4 = 0x1A200154,
  PIXELFORMAT_LIN_DXT4 = 0x1A200054,
  PIXELFORMAT_DXT5 = 0x1A200154,
  PIXELFORMAT_LIN_DXT5 = 0x1A200054,
  PIXELFORMAT_DXN = 0x1A200171,
  PIXELFORMAT_LIN_DXN = 0x1A200071,
  PIXELFORMAT_A8 = 0x4900102,
  PIXELFORMAT_LIN_A8 = 0x4900002,
  PIXELFORMAT_L8 = 0x28000102,
  PIXELFORMAT_LIN_L8 = 0x28000002,
  PIXELFORMAT_R5G6B5 = 0x28280144,
  PIXELFORMAT_LIN_R5G6B5 = 0x28280044,
  PIXELFORMAT_R6G5B5 = 0x28280145,
  PIXELFORMAT_LIN_R6G5B5 = 0x28280045,
  PIXELFORMAT_L6V5U5 = 0x2A200B45,
  PIXELFORMAT_LIN_L6V5U5 = 0x2A200A45,
  PIXELFORMAT_X1R5G5B5 = 0x28280143,
  PIXELFORMAT_LIN_X1R5G5B5 = 0x28280043,
  PIXELFORMAT_A1R5G5B5 = 0x18280143,
  PIXELFORMAT_LIN_A1R5G5B5 = 0x18280043,
  PIXELFORMAT_A4R4G4B4 = 0x1828014F,
  PIXELFORMAT_LIN_A4R4G4B4 = 0x1828004F,
  PIXELFORMAT_X4R4G4B4 = 0x2828014F,
  PIXELFORMAT_LIN_X4R4G4B4 = 0x2828004F,
  PIXELFORMAT_Q4W4V4U4 = 0x1A20AB4F,
  PIXELFORMAT_LIN_Q4W4V4U4 = 0x1A20AA4F,
  PIXELFORMAT_A8L8 = 0x800014A,
  PIXELFORMAT_LIN_A8L8 = 0x800004A,
  PIXELFORMAT_G8R8 = 0x2D20014A,
  PIXELFORMAT_LIN_G8R8 = 0x2D20004A,
  PIXELFORMAT_V8U8 = 0x2D20AB4A,
  PIXELFORMAT_LIN_V8U8 = 0x2D20AA4A,
  PIXELFORMAT_D16 = 0x1A220158,
  PIXELFORMAT_LIN_D16 = 0x1A220058,
  PIXELFORMAT_L16 = 0x28000158,
  PIXELFORMAT_LIN_L16 = 0x28000058,
  PIXELFORMAT_R16F = 0x2DA2AB5E,
  PIXELFORMAT_LIN_R16F = 0x2DA2AA5E,
  PIXELFORMAT_R16F_EXPAND = 0x2DA2AB5B,
  PIXELFORMAT_LIN_R16F_EXPAND = 0x2DA2AA5B,
  PIXELFORMAT_UYVY = 0x1A20014C,
  PIXELFORMAT_LIN_UYVY = 0x1A20004C,
  PIXELFORMAT_LE_UYVY = 0x1A20010C,
  PIXELFORMAT_LE_LIN_UYVY = 0x1A20000C,
  PIXELFORMAT_G8R8_G8B8 = 0x1828014C,
  PIXELFORMAT_LIN_G8R8_G8B8 = 0x1828004C,
  PIXELFORMAT_R8G8_B8G8 = 0x1828014B,
  PIXELFORMAT_LIN_R8G8_B8G8 = 0x1828004B,
  PIXELFORMAT_YUY2 = 0x1A20014B,
  PIXELFORMAT_LIN_YUY2 = 0x1A20004B,
  PIXELFORMAT_LE_YUY2 = 0x1A20010B,
  PIXELFORMAT_LE_LIN_YUY2 = 0x1A20000B,
  PIXELFORMAT_A8R8G8B8 = 0x18280186,
  PIXELFORMAT_LIN_A8R8G8B8 = 0x18280086,
  PIXELFORMAT_X8R8G8B8 = 0x28280186,
  PIXELFORMAT_LIN_X8R8G8B8 = 0x28280086,
  PIXELFORMAT_A8B8G8R8 = 0x1A200186,
  PIXELFORMAT_LIN_A8B8G8R8 = 0x1A200086,
  PIXELFORMAT_X8B8G8R8 = 0x2A200186,
  PIXELFORMAT_LIN_X8B8G8R8 = 0x2A200086,
  PIXELFORMAT_X8L8V8U8 = 0x2A200B86,
  PIXELFORMAT_LIN_X8L8V8U8 = 0x2A200A86,
  PIXELFORMAT_Q8W8V8U8 = 0x1A20AB86,
  PIXELFORMAT_LIN_Q8W8V8U8 = 0x1A20AA86,
  PIXELFORMAT_A2R10G10B10 = 0x182801B6,
  PIXELFORMAT_LIN_A2R10G10B10 = 0x182800B6,
  PIXELFORMAT_X2R10G10B10 = 0x282801B6,
  PIXELFORMAT_LIN_X2R10G10B10 = 0x282800B6,
  PIXELFORMAT_A2B10G10R10 = 0x1A2001B6,
  PIXELFORMAT_LIN_A2B10G10R10 = 0x1A2000B6,
  PIXELFORMAT_A2W10V10U10 = 0x1A202BB6,
  PIXELFORMAT_LIN_A2W10V10U10 = 0x1A202AB6,
  PIXELFORMAT_A16L16 = 0x8000199,
  PIXELFORMAT_LIN_A16L16 = 0x8000099,
  PIXELFORMAT_G16R16 = 0x2D200199,
  PIXELFORMAT_LIN_G16R16 = 0x2D200099,
  PIXELFORMAT_V16U16 = 0x2D20AB99,
  PIXELFORMAT_LIN_V16U16 = 0x2D20AA99,
  PIXELFORMAT_R10G11B11 = 0x282801B7,
  PIXELFORMAT_LIN_R10G11B11 = 0x282800B7,
  PIXELFORMAT_R11G11B10 = 0x282801B8,
  PIXELFORMAT_LIN_R11G11B10 = 0x282800B8,
  PIXELFORMAT_W10V11U11 = 0x2A20ABB7,
  PIXELFORMAT_LIN_W10V11U11 = 0x2A20AAB7,
  PIXELFORMAT_W11V11U10 = 0x2A20ABB8,
  PIXELFORMAT_LIN_W11V11U10 = 0x2A20AAB8,
  PIXELFORMAT_G16R16F = 0x2D22AB9F,
  PIXELFORMAT_LIN_G16R16F = 0x2D22AA9F,
  PIXELFORMAT_G16R16F_EXPAND = 0x2D22AB9C,
  PIXELFORMAT_LIN_G16R16F_EXPAND = 0x2D22AA9C,
  PIXELFORMAT_L32 = 0x280001A1,
  PIXELFORMAT_LIN_L32 = 0x280000A1,
  PIXELFORMAT_R32F = 0x2DA2ABA4,
  PIXELFORMAT_LIN_R32F = 0x2DA2AAA4,
  PIXELFORMAT_A16B16G16R16 = 0x1A20015A,
  PIXELFORMAT_LIN_A16B16G16R16 = 0x1A20005A,
  PIXELFORMAT_Q16W16V16U16 = 0x1A20AB5A,
  PIXELFORMAT_LIN_Q16W16V16U16 = 0x1A20AA5A,
  PIXELFORMAT_A16B16G16R16F = 0x1A22AB60,
  PIXELFORMAT_LIN_A16B16G16R16F = 0x1A22AA60,
  PIXELFORMAT_A16B16G16R16F_EXPAND = 0x1A22AB5D,
  PIXELFORMAT_LIN_A16B16G16R16F_EXPAND = 0x1A22AA5D,
  PIXELFORMAT_A32L32 = 0x80001A2,
  PIXELFORMAT_LIN_A32L32 = 0x80000A2,
  PIXELFORMAT_G32R32 = 0x2D2001A2,
  PIXELFORMAT_LIN_G32R32 = 0x2D2000A2,
  PIXELFORMAT_V32U32 = 0x2D20ABA2,
  PIXELFORMAT_LIN_V32U32 = 0x2D20AAA2,
  PIXELFORMAT_G32R32F = 0x2D22ABA5,
  PIXELFORMAT_LIN_G32R32F = 0x2D22AAA5,
  PIXELFORMAT_A32B32G32R32 = 0x1A2001A3,
  PIXELFORMAT_LIN_A32B32G32R32 = 0x1A2000A3,
  PIXELFORMAT_Q32W32V32U32 = 0x1A20ABA3,
  PIXELFORMAT_LIN_Q32W32V32U32 = 0x1A20AAA3,
  PIXELFORMAT_A32B32G32R32F = 0x1A22ABA6,
  PIXELFORMAT_LIN_A32B32G32R32F = 0x1A22AAA6,
  PIXELFORMAT_A2B10G10R10F_EDRAM = 0x1A2201BF,
  PIXELFORMAT_G16R16_EDRAM = 0x2D20AB8D,
  PIXELFORMAT_A16B16G16R16_EDRAM = 0x1A20AB55,
  PIXELFORMAT_LE_X8R8G8B8 = 0x28280106,
  PIXELFORMAT_LE_A8R8G8B8 = 0x18280106,
  PIXELFORMAT_LE_X2R10G10B10 = 0x28280136,
  PIXELFORMAT_LE_A2R10G10B10 = 0x18280136,
  PIXELFORMAT_INDEX16 = 0x1,
  PIXELFORMAT_INDEX32 = 0x6,
  PIXELFORMAT_VERTEXDATA = 0x8,
  PIXELFORMAT_NA = 0xFFFFFFFF,
  PIXELFORMAT_DXT3A = 0x1A20017A,
  PIXELFORMAT_LIN_DXT3A = 0x1A20007A,
  PIXELFORMAT_DXT3A_1111 = 0x1A20017D,
  PIXELFORMAT_LIN_DXT3A_1111 = 0x1A20007D,
  PIXELFORMAT_DXT5A = 0x1A20017B,
  PIXELFORMAT_LIN_DXT5A = 0x1A20007B,
  PIXELFORMAT_CTX1 = 0x1A20017C,
  PIXELFORMAT_LIN_CTX1 = 0x1A20007C,
  PIXELFORMAT_D24S8 = 0x2D200196,
  PIXELFORMAT_LIN_D24S8 = 0x2D200096,
  PIXELFORMAT_D24X8 = 0x2DA00196,
  PIXELFORMAT_LIN_D24X8 = 0x2DA00096,
  PIXELFORMAT_D24FS8 = 0x1A220197,
  PIXELFORMAT_LIN_D24FS8 = 0x1A220097,
  PIXELFORMAT_D32 = 0x1A2201A1,
  PIXELFORMAT_LIN_D32 = 0x1A2200A1,
  PIXELFORMAT_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1305 */
enum renderengine::StateBuffer::CommandToken : __int32
{
  COMMANDTOKEN_DONE = 0x0,
  COMMANDTOKEN_INDEXBUFFER = 0x1,
  COMMANDTOKEN_VERTEXBUFFER = 0x2,
  COMMANDTOKEN_RENDERTARGETSTATE = 0x3,
  COMMANDTOKEN_BLENDSTATE = 0x4,
  COMMANDTOKEN_DEPTHSTENCILSTATE = 0x5,
  COMMANDTOKEN_RASTERIZERSTATE = 0x6,
  COMMANDTOKEN_VERTEXPROGRAMSTATE = 0x7,
  COMMANDTOKEN_PIXELPROGRAM = 0x8,
  COMMANDTOKEN_VIEWPORTPARAMETERS = 0x9,
  COMMANDTOKEN_SCISSORRECTPARAMETERS = 0xA,
  COMMANDTOKEN_DRAWPARAMETERS = 0xB,
  COMMANDTOKEN_DRAWINDEXEDPARAMETERS = 0xC,
  COMMANDTOKEN_CLEARCOLORPARAMETERS = 0xD,
  COMMANDTOKEN_CLEARDEPTHSTENCILPARAMETERS = 0xE,
  COMMANDTOKEN_PROGRAMVARIABLEHANDLE = 0xF,
  COMMANDTOKEN_PROGRAMSTATES = 0x10,
  COMMANDTOKEN_TEXTURE = 0x11,
  COMMANDTOKEN_SAMPLERSTATE = 0x12,
  COMMANDTOKEN_DRAWINSTANCEDPARAMETERS = 0x13,
  COMMANDTOKEN_DRAWINDEXEDINSTANCEDPARAMETERS = 0x14,
  COMMANDTOKEN_MAX = 0x15,
  COMMANDTOKEN_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1306 */
enum renderengine::RasterizerState::FillMode : __int32
{
  FILLMODE_POINT = 0x1,
  FILLMODE_WIREFRAME = 0x25,
  FILLMODE_SOLID = 0x0,
  FILLMODE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1307 */
enum renderengine::RasterizerState::CullMode : __int32
{
  CULLMODE_NONE = 0x0,
  CULLMODE_FRONT = 0x1,
  CULLMODE_BACK = 0x2,
  CULLMODE_MASK = 0x3,
  CULLMODE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1308 */
enum renderengine::RasterizerState::FrontFace : __int32
{
  FRONTFACE_CCW = 0x0,
  FRONTFACE_CW = 0x4,
  FRONTFACE_MASK = 0x4,
  FRONTFACE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1309 */
typedef renderengine::ProgramBuffer::Type renderengine::Texture::Type;

/* 1311 */
enum renderengine::Device::State : __int32
{
  STATE_NA = 0xFFFFFFFF,
  STATE_COLD = 0x0,
  STATE_INITIALIZE = 0x1,
  STATE_START = 0x2,
  STATE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1312 */
enum renderengine::Device::Parameters::DisplayType : __int32
{
  DISPLAYTYPE_NTSC = 0x0,
  DISPLAYTYPE_PAL_50 = 0x1,
  DISPLAYTYPE_PAL_60 = 0x2,
  DISPLAYTYPE_HDTV_480P = 0x3,
  DISPLAYTYPE_HDTV_720P = 0x4,
  DISPLAYTYPE_HDTV_1080i = 0x5,
  DISPLAYTYPE_DEFAULT = 0x6,
};

/* 1313 */
enum renderengine::VertexDescriptor::ElementType : __int32
{
  ELEMENTTYPE_NA = 0x0,
  ELEMENTTYPE_XYZ = 0x1,
  ELEMENTTYPE_XYZRHW = 0x2,
  ELEMENTTYPE_NORMAL = 0x3,
  ELEMENTTYPE_VERTEXCOLOR = 0x4,
  ELEMENTTYPE_PRELIT = 0x5,
  ELEMENTTYPE_TEX0 = 0x6,
  ELEMENTTYPE_TEX1 = 0x7,
  ELEMENTTYPE_TEX2 = 0x8,
  ELEMENTTYPE_TEX3 = 0x9,
  ELEMENTTYPE_TEX4 = 0xA,
  ELEMENTTYPE_TEX5 = 0xB,
  ELEMENTTYPE_TEX6 = 0xC,
  ELEMENTTYPE_TEX7 = 0xD,
  ELEMENTTYPE_INDICES = 0xE,
  ELEMENTTYPE_WEIGHTS = 0xF,
  ELEMENTTYPE_XYZ2 = 0x10,
  ELEMENTTYPE_NORMAL2 = 0x11,
  ELEMENTTYPE_XZ = 0x12,
  ELEMENTTYPE_Y = 0x13,
  ELEMENTTYPE_Y2 = 0x14,
  ELEMENTTYPE_TANGENT = 0x15,
  ELEMENTTYPE_BINORMAL = 0x16,
  ELEMENTTYPE_SPECULAR = 0x17,
  ELEMENTTYPE_FOG = 0x18,
  ELEMENTTYPE_PSIZE = 0x19,
  ELEMENTTYPE_INDICES2 = 0x1A,
  ELEMENTTYPE_WEIGHTS2 = 0x1B,
  ELEMENTTYPE_MAX = 0x1C,
  ELEMENTTYPE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1314 */
enum renderengine::VertexDescriptor::ElementClass : __int32
{
  ELEMENTCLASS_NA = 0x0,
  ELEMENTCLASS_PERVERTEX = 0x1,
  ELEMENTCLASS_PERINSTANCE = 0x2,
  ELEMENTCLASS_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1315 */
enum renderengine::StateHelper::BlendStateType : __int32
{
  BLENDSTATE_OPAQUE = 0x0,
  BLENDSTATE_ADDITIVE = 0x1,
  BLENDSTATE_DECAL = 0x2,
  BLENDSTATE_INVDESTCOLOR_ADD_ONE = 0x3,
  BLENDSTATE_MAX = 0x4,
  BLENDSTATE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1316 */
enum renderengine::BlendState::Input : __int32
{
  INPUT_ZERO = 0x0,
  INPUT_ONE = 0x1,
  INPUT_SRCCOLOR = 0x4,
  INPUT_INVSRCCOLOR = 0x5,
  INPUT_SRCALPHA = 0x6,
  INPUT_INVSRCALPHA = 0x7,
  INPUT_DESTCOLOR = 0x8,
  INPUT_INVDESTCOLOR = 0x9,
  INPUT_DESTALPHA = 0xA,
  INPUT_INVDESTALPHA = 0xB,
  INPUT_BLENDFACTOR = 0xC,
  INPUT_INVBLENDFACTOR = 0xD,
  INPUT_CONSTANTALPHA = 0xE,
  INPUT_INVCONSTANTALPHA = 0xF,
  INPUT_SRCALPHASAT = 0x10,
  INPUT_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1317 */
enum renderengine::BlendState::Operation : __int32
{
  OPERATION_ADD = 0x0,
  OPERATION_SUBTRACT = 0x1,
  OPERATION_MIN = 0x2,
  OPERATION_MAX = 0x3,
  OPERATION_REVSUBTRACT = 0x4,
  OPERATION_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 1318 */
typedef renderengine::DepthStencilState::Function renderengine::BlendState::Function;

/* 1319 */
typedef renderengine::ProgramBuffer::Type renderengine::PixelBuffer::Type;

/* 2745 */
enum renderengine::postfx::PfxHelper::Method : __int32
{
  METHOD_16TAP = 0x0,
  METHOD_16TAP_WITH_BILINEAR = 0x1,
  METHOD_16TAP_WITH_BILINEAR_THRESHOLD = 0x2,
};

/* 2749 */
enum renderengine::postfx::PfxHelper::eBlitType : __int32
{
  NORMAL = 0x0,
  SHOWALPHA = 0x1,
  FISHEYE = 0x2,
  NOOVERIDE_PS = 0x3,
};

/* 2859 */
enum renderengine::postfx::RenderTarget::RenderTargetMode : __int32
{
  eRenderTarget_NONE = 0x0,
  eRenderTarget_CREATE = 0x1,
  eRenderTarget_USE_DEVICE = 0x2,
  eRenderTarget_USE_PROVIDED = 0x3,
};

/* 4311 */
enum renderengine::TextureFormatInfo::TextureFormatMode : __int32
{
  TEXTUREFORMAT_UNKNOWN = 0x0,
  TEXTUREFORMAT_TILED = 0x1,
  TEXTUREFORMAT_LINEAR = 0x2,
  TEXTUREFORMAT_DEFAULT = 0x3,
  TEXTUREFORMAT_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 5735 */
enum renderengine::RwgObjectType : __int32
{
  RWGOBJECTTYPE_NA = 0x200E0,
  RWGOBJECTTYPE_VIEWPORTPARAMETERS = 0x200E1,
  RWGOBJECTTYPE_SCISSORRECTPARAMETERS = 0x200E2,
  RWGOBJECTTYPE_CLEARCOLORPARAMETERS = 0x200E3,
  RWGOBJECTTYPE_CLEARDEPTHSTENCILPARAMETERS = 0x200E4,
  RWGOBJECTTYPE_DRAWINDEXEDPARAMETERS = 0x200E5,
  RWGOBJECTTYPE_DRAWPARAMETERS = 0x200E6,
  RWGOBJECTTYPE_PIXELBUFFER = 0x200E7,
  RWGOBJECTTYPE_TEXTURE = 0x200E8,
  RWGOBJECTTYPE_VERTEXDESCRIPTOR = 0x200E9,
  RWGOBJECTTYPE_VERTEXBUFFER = 0x200EA,
  RWGOBJECTTYPE_INDEXBUFFER = 0x200EB,
  RWGOBJECTTYPE_PROGRAMBUFFER = 0x200EC,
  RWGOBJECTTYPE_STATEBUFFER = 0x200ED,
  RWGOBJECTTYPE_PROGRAMSTATEBUFFER = 0x200EE,
  RWGOBJECTTYPE_PROGRAMSTATES = 0x200EF,
  RWGOBJECTTYPE_SAMPLERSTATE = 0x200F1,
  RWGOBJECTTYPE_RENDERTARGETSTATE = 0x200F3,
  RWGOBJECTTYPE_BLENDSTATE = 0x200F4,
  RWGOBJECTTYPE_DEPTHSTENCILSTATE = 0x200F5,
  RWGOBJECTTYPE_RASTERIZERSTATE = 0x200F6,
  RWGOBJECTTYPE_VERTEXPROGRAMSTATE = 0x200F7,
  RWGOBJECTTYPE_PROGRAMSTATEHANDLE = 0x200F8,
  RWGOBJECTTYPE_DRAWINSTANCEDPARAMETERS = 0x200F9,
  RWGOBJECTTYPE_DRAWINDEXEDINSTANCEDPARAMETERS = 0x200FA,
  RWGOBJECTTYPE_MESHHELPER = 0x20081,
  RWGOBJECTTYPE_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 5740 */
enum renderengine::Behaviour : __int32
{
  BEHAVIOUR_NA = 0xFFFFFFFF,
  BEHAVIOUR_STATIC = 0x0,
  BEHAVIOUR_DYNAMIC = 0x1,
  BEHAVIOUR_DYNAMIC_SHARED = 0x2,
  BEHAVIOUR_EXTERNAL = 0x3,
  BEHAVIOUR_REFERENCE = 0x4,
  BEHAVIOUR_MAX = 0x5,
  BEHAVIOUR_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 15137 */
struct renderengine::IteratorRead
{
  const void *mCurrent;
  const void *mHigh;
  const void *mLow;
};

/* 6866 */
struct $91D1B2149FAC90180ECB9AC277F76009
{
  float x;
  float y;
  float z;
  float w;
};

/* 6867 */
union $B7B8F02308E65255310DBC0B27D2928D
{
  $91D1B2149FAC90180ECB9AC277F76009 __s0;
  float v[4];
  unsigned int u[4];
};

/* 6868 */
struct __vector4
{
  $B7B8F02308E65255310DBC0B27D2928D ___u0;
};

/* 15138 */
struct __cppobj rw::math::vpu::Vector4
{
  __vector4 mV;
};

/* 15139 */
struct __cppobj renderengine::RGBA32 : rw::math::vpu::Vector4
{
};

/* 15144 */
struct renderengine::IteratorWrite
{
  void *mCurrent;
  void *mHigh;
  void *mLow;
};

/* 15145 */
struct __cppobj renderengine::RGBA8
{
  unsigned int m_rgba;
};

/* 16668 */
struct renderengine::VertexDescriptor::Element
{
  unsigned __int16 stream;
  unsigned __int16 offset;
  renderengine::VertexFormat format;
  unsigned __int8 method;
  unsigned __int8 usage;
  unsigned __int8 usageIndex;
  unsigned __int8 type;
  unsigned int elementClass;
};

/* 16672 */
const struct renderengine::ProgramBuffer
{
  renderengine::ProgramBuffer::Type m_type;
  unsigned __int16 m_numParameters;
  unsigned __int16 m_isEndianSwapped;
  unsigned int m_cachedPartSize;
  unsigned int m_physicalPartSize;
  void *m_physicalPart;
};

/* 16688 */
const struct __cppobj renderengine::ProgramVariableBuffer
{
  renderengine::ProgramVariableHandle::DataType m_dataType;
  unsigned int m_numConstants;
  renderengine::ProgramBuffer::Type m_programType;
  unsigned int m_bufferOffset;
  void *m_buffer;
};

/* 16705 */
const struct __cppobj renderengine::VertexDescriptor
{
  D3DVertexDeclaration *m_d3dVertexDeclaration;
  unsigned int m_typesFlags;
  unsigned __int16 m_numElements;
  __int16 m_refCount;
  unsigned __int16 m_instanceStreams;
  unsigned __int16 m_pad0;
  renderengine::VertexDescriptor::Element m_elements[1];
};

/* 6805 */
struct D3DResource
{
  unsigned int Common;
  unsigned int ReferenceCount;
  unsigned int Fence;
  unsigned int ReadFence;
  unsigned int Identifier;
  unsigned int BaseFlush;
};

/* 6839 */
struct __cppobj D3DVertexDeclaration : D3DResource
{
};

/* 17248 */
struct __cppobj renderengine::MeshHelper
{
  unsigned int m_numIndexBuffers;
  unsigned int m_numVertexBuffers;
  void *m_buffers[1];
};

/* 7132 */
struct __cppobj D3DIndexBuffer : D3DResource
{
  unsigned int Address;
  unsigned int Size;
};

/* 17249 */
struct __cppobj renderengine::IndexBuffer : D3DIndexBuffer
{
  unsigned int m_numIndices;
};

/* 6943 */
struct $F1611EE1E966686941EB2BD5C0621C37
{
  unsigned __int32 Type : 2;
  unsigned __int32 BaseAddress : 30;
  unsigned __int32 Endian : 2;
  unsigned __int32 Size : 24;
  unsigned __int32 AddressClamp : 1;
  unsigned __int32 : 1;
  unsigned __int32 RequestSize : 2;
  unsigned __int32 ClampDisable : 2;
};

/* 6944 */
union GPUVERTEX_FETCH_CONSTANT
{
  $F1611EE1E966686941EB2BD5C0621C37 __s0;
  unsigned int dword[2];
};

/* 7131 */
struct __cppobj D3DVertexBuffer : D3DResource
{
  GPUVERTEX_FETCH_CONSTANT Format;
};

/* 17250 */
struct __cppobj renderengine::VertexBuffer : D3DVertexBuffer
{
  unsigned int m_bufferSize;
  unsigned int m_type;
};

/* 50 */
enum _D3DPRIMITIVETYPE : __int32
{
  D3DPT_POINTLIST = 0x1,
  D3DPT_LINELIST = 0x2,
  D3DPT_LINESTRIP = 0x3,
  D3DPT_TRIANGLELIST = 0x4,
  D3DPT_TRIANGLEFAN = 0x5,
  D3DPT_TRIANGLESTRIP = 0x6,
  D3DPT_RECTLIST = 0x8,
  D3DPT_QUADLIST = 0xD,
  D3DPT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 17251 */
struct __cppobj renderengine::DrawParameters
{
  _D3DPRIMITIVETYPE primType;
  unsigned int startVertex;
  unsigned int vertexCount;
};

/* 17252 */
struct __cppobj renderengine::DrawIndexedParameters
{
  _D3DPRIMITIVETYPE primType;
  int baseVertexIndex;
  unsigned int startIndex;
  unsigned int indexCount;
};

/* 15128 */
struct __cppobj old_datacontainer::BufferParameters
{
  unsigned int mId;
  unsigned int mSize;
  unsigned int mMemoryType;
  unsigned int mDimension0;
  unsigned int mDimension1;
};

/* 15132 */
struct __cppobj old_datacontainer::Buffer
{
  void *mMinimum;
  void *mMaximumAllocated;
  void *mMaximumUsed;
  old_datacontainer::BufferParameters mParameters;
};

/* 18379 */
struct __cppobj renderengine::StateBuffer : old_datacontainer::Buffer
{
  void *m_buffer;
  unsigned int m_bufferSize;
  int m_refCount;
};

/* 37 */
enum _D3DCMPFUNC : __int32
{
  D3DCMP_NEVER = 0x0,
  D3DCMP_LESS = 0x1,
  D3DCMP_EQUAL = 0x2,
  D3DCMP_LESSEQUAL = 0x3,
  D3DCMP_GREATER = 0x4,
  D3DCMP_NOTEQUAL = 0x5,
  D3DCMP_GREATEREQUAL = 0x6,
  D3DCMP_ALWAYS = 0x7,
  D3DCMP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 40 */
enum _D3DSTENCILOP : __int32
{
  D3DSTENCILOP_KEEP = 0x0,
  D3DSTENCILOP_ZERO = 0x1,
  D3DSTENCILOP_REPLACE = 0x2,
  D3DSTENCILOP_INCRSAT = 0x3,
  D3DSTENCILOP_DECRSAT = 0x4,
  D3DSTENCILOP_INVERT = 0x5,
  D3DSTENCILOP_INCR = 0x6,
  D3DSTENCILOP_DECR = 0x7,
  D3DSTENCILOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 54 */
enum _D3DHISTENCILCMPFUNC : __int32
{
  D3DHSCMP_EQUAL = 0x0,
  D3DHSCMP_NOTEQUAL = 0x1,
  D3DHSCMP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 18748 */
struct __cppobj __declspec(align(4)) renderengine::DepthStencilState::Parameters
{
  _D3DCMPFUNC zfunc;
  _D3DSTENCILOP stencilfail;
  _D3DSTENCILOP stencilzfail;
  _D3DSTENCILOP stencilpass;
  _D3DCMPFUNC stencilfunc;
  _D3DSTENCILOP ccw_stencilfail;
  _D3DSTENCILOP ccw_stencilzfail;
  _D3DSTENCILOP ccw_stencilpass;
  _D3DCMPFUNC ccw_stencilfunc;
  _D3DHISTENCILCMPFUNC histencilfunc;
  unsigned int stencilref;
  unsigned int stencilmask;
  unsigned int stencilwritemask;
  unsigned int ccw_stencilref;
  unsigned int ccw_stencilmask;
  unsigned int ccw_stencilwritemask;
  unsigned int histencilref;
  bool zenable;
  bool zwriteenable;
  bool stencilenable;
  bool twosidedstencilmode;
  bool histencilenable;
  bool histencilwriteenable;
};

/* 18749 */
struct __cppobj renderengine::DepthStencilState
{
};

/* 18750 */
struct renderengine::VertexIteratorBaseClass
{
  void *m_minimum;
  void *m_dest;
};

/* 18751 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeFloat4> : renderengine::VertexIteratorBaseClass
{
};

/* 18752 */
struct __cppobj renderengine::xbox2::DepthStencilState : renderengine::DepthStencilState
{
  unsigned int zfunc;
  unsigned int stencilfail;
  unsigned int stencilzfail;
  unsigned int stencilpass;
  unsigned int stencilfunc;
  unsigned int ccw_stencilfail;
  unsigned int ccw_stencilzfail;
  unsigned int ccw_stencilpass;
  unsigned int ccw_stencilfunc;
  unsigned int histencilfunc;
  unsigned int stencilref;
  unsigned int stencilmask;
  unsigned int stencilwritemask;
  unsigned int ccw_stencilref;
  unsigned int ccw_stencilmask;
  unsigned int ccw_stencilwritemask;
  unsigned int histencilref;
  unsigned int zenable;
  unsigned int zwriteenable;
  unsigned int stencilenable;
  unsigned int twosidedstencilmode;
  unsigned int histencilenable;
  unsigned int histencilwriteenable;
  int refCount;
};

/* 18753 */
struct __cppobj renderengine::VertexProgramState
{
};

/* 18754 */
struct __cppobj renderengine::xbox2::VertexProgramState : renderengine::VertexProgramState
{
  void *physicalPart;
  unsigned int physicalPartSize;
  unsigned int cachedPartSize;
  unsigned int isEndianSwapped;
  unsigned __int8 instanceStrides[16];
  const renderengine::VertexDescriptor *originalVertexDescriptor;
  const renderengine::ProgramBuffer *originalVertexProgram;
  int refCount;
};

/* 18755 */
struct __cppobj renderengine::RasterizerState
{
};

/* 18756 */
struct __cppobj renderengine::xbox2::RasterizerState : renderengine::RasterizerState
{
  unsigned int fillmode;
  unsigned int cullmode;
  unsigned int depthbias;
  unsigned int slopescaledepthbias;
  unsigned int multisamplemask;
  unsigned int scissortestenable;
  unsigned int multisampleantialias;
  unsigned int srgbwriteenable;
  unsigned int viewportenable;
  unsigned int halfpixeloffset;
  unsigned int primitiveResetEnable;
  unsigned int primitiveResetIndex;
  int refCount;
};

/* 18757 */
struct __cppobj renderengine::SamplerState
{
};

/* 18758 */
struct renderengine::xbox2::SamplerState::Packed
{
  unsigned __int8 addressU;
  unsigned __int8 addressV;
  unsigned __int8 addressW;
  unsigned __int8 clamppolicy;
  unsigned __int8 mipfilter;
  char hgradientexpbias;
  char vgradientexpbias;
  unsigned __int8 bordercolor;
  unsigned __int8 forcebcwtomax;
  unsigned __int8 trilinearthreshold;
  unsigned __int8 minfilter;
  unsigned __int8 minfilterz;
  unsigned __int8 magfilter;
  unsigned __int8 magfilterz;
  unsigned __int8 separatezfilterenable;
  unsigned __int8 maxanisotropy;
  unsigned __int8 maxmiplevel;
  unsigned __int8 minmiplevel;
  unsigned __int8 srgbtexture;
  unsigned __int8 pad;
};

/* 18759 */
union renderengine::xbox2::SamplerState::<unnamed_tag>
{
  renderengine::xbox2::SamplerState::Packed packed;
  unsigned int dword[5];
};

/* 18760 */
struct __cppobj renderengine::xbox2::SamplerState : renderengine::SamplerState
{
  float mipmaplodbias;
  float anisotropybias;
  renderengine::xbox2::SamplerState::<unnamed_tag> packedstate;
  int refCount;
};

/* 18761 */
struct __cppobj renderengine::BlendState
{
};

/* 7739 */
struct _D3DBLENDSTATE
{
  unsigned __int32 SrcBlend : 5;
  unsigned __int32 BlendOp : 3;
  unsigned __int32 DestBlend : 8;
  unsigned __int32 SrcBlendAlpha : 5;
  unsigned __int32 BlendOpAlpha : 3;
  unsigned __int32 DestBlendAlpha : 8;
};

/* 18762 */
struct __cppobj renderengine::xbox2::BlendState : renderengine::BlendState
{
  _D3DBLENDSTATE blend[4];
  unsigned int colorWriteEnable;
  unsigned int colorWriteEnable1;
  unsigned int colorWriteEnable2;
  unsigned int colorWriteEnable3;
  unsigned int alphaToMaskOffsets;
  unsigned int blendFactor;
  unsigned int alphaToMaskEnable;
  unsigned int highPrecisionBlendEnable;
  unsigned int highPrecisionBlendEnable1;
  unsigned int highPrecisionBlendEnable2;
  unsigned int highPrecisionBlendEnable3;
  unsigned int alphafunc;
  unsigned int alphatestenable;
  unsigned int alpharef;
  int refCount;
};

/* 18763 */
struct __cppobj renderengine::RenderTargetState
{
};

/* 7647 */
struct _D3DSURFACES
{
  D3DSurface *pDepthStencilSurface;
  D3DSurface *pRenderTarget[4];
};

/* 18764 */
struct __cppobj renderengine::xbox2::RenderTargetState : renderengine::RenderTargetState
{
  _D3DSURFACES surfaces;
  int refCount;
};

/* 6953 */
struct $111DA25E5CA5714BB5C92B173D2ABB79
{
  unsigned __int32 SurfacePitch : 14;
  unsigned __int32 : 2;
  unsigned __int32 MsaaSamples : 2;
  unsigned __int32 HiZPitch : 14;
};

/* 6954 */
union GPU_SURFACEINFO
{
  $111DA25E5CA5714BB5C92B173D2ABB79 __s0;
  unsigned int dword;
};

/* 7224 */
union $3B1FD7C986AD6317C38BC230EC2E94B1
{
  GPU_SURFACEINFO SurfaceInfo;
  D3DBaseTexture *Parent;
};

/* 6957 */
struct $E7D38AE723217AF984D926CC873EFA29
{
  unsigned __int32 DepthBase : 12;
  unsigned __int32 : 4;
  unsigned __int32 DepthFormat : 1;
  unsigned __int32 DisableHZClamp : 1;
};

/* 6958 */
union GPU_DEPTHINFO
{
  $E7D38AE723217AF984D926CC873EFA29 __s0;
  unsigned int dword;
};

/* 6955 */
struct $DE3078EF908BB06695CE963821AC4563
{
  unsigned __int32 ColorBase : 12;
  unsigned __int32 : 4;
  unsigned __int32 ColorFormat : 4;
  unsigned __int32 ColorExpBias : 6;
};

/* 6956 */
union GPU_COLORINFO
{
  $DE3078EF908BB06695CE963821AC4563 __s0;
  unsigned int dword;
};

/* 7225 */
struct $C59706075033FEA3E971CD525983693A
{
  unsigned __int32 : 22;
  unsigned __int32 ArrayIndex : 6;
  unsigned __int32 MipLevel : 4;
};

/* 7226 */
union $E7F10356E29CE8DC46CFB569A97181B8
{
  GPU_DEPTHINFO DepthInfo;
  GPU_COLORINFO ColorInfo;
  $C59706075033FEA3E971CD525983693A __s2;
};

/* 6983 */
struct $1F8D07579AFE5282926B26996EA61894
{
  unsigned __int32 HiZWriteEnable : 1;
  unsigned __int32 HiZEnable : 1;
  unsigned __int32 HiStencilWriteEnable : 1;
  unsigned __int32 HiStencilEnable : 1;
  unsigned __int32 HiZFunc : 1;
  unsigned __int32 HiStencilFunc : 1;
  unsigned __int32 : 2;
  unsigned __int32 HiStencilRef : 8;
  unsigned __int32 : 1;
  unsigned __int32 HiBaseAddr : 15;
};

/* 6984 */
union GPU_HICONTROL
{
  $1F8D07579AFE5282926B26996EA61894 __s0;
  unsigned int dword;
};

/* 152 */
enum _D3DFORMAT : __int32
{
  D3DFMT_DXT1 = 0x1A200152,
  D3DFMT_LIN_DXT1 = 0x1A200052,
  D3DFMT_DXT2 = 0x1A200153,
  D3DFMT_LIN_DXT2 = 0x1A200053,
  D3DFMT_DXT3 = 0x1A200153,
  D3DFMT_LIN_DXT3 = 0x1A200053,
  D3DFMT_DXT3A = 0x1A20017A,
  D3DFMT_LIN_DXT3A = 0x1A20007A,
  D3DFMT_DXT3A_1111 = 0x1A20017D,
  D3DFMT_LIN_DXT3A_1111 = 0x1A20007D,
  D3DFMT_DXT4 = 0x1A200154,
  D3DFMT_LIN_DXT4 = 0x1A200054,
  D3DFMT_DXT5 = 0x1A200154,
  D3DFMT_LIN_DXT5 = 0x1A200054,
  D3DFMT_DXT5A = 0x1A20017B,
  D3DFMT_LIN_DXT5A = 0x1A20007B,
  D3DFMT_DXN = 0x1A200171,
  D3DFMT_LIN_DXN = 0x1A200071,
  D3DFMT_CTX1 = 0x1A20017C,
  D3DFMT_LIN_CTX1 = 0x1A20007C,
  D3DFMT_A8 = 0x4900102,
  D3DFMT_LIN_A8 = 0x4900002,
  D3DFMT_L8 = 0x28000102,
  D3DFMT_LIN_L8 = 0x28000002,
  D3DFMT_R5G6B5 = 0x28280144,
  D3DFMT_LIN_R5G6B5 = 0x28280044,
  D3DFMT_R6G5B5 = 0x28280145,
  D3DFMT_LIN_R6G5B5 = 0x28280045,
  D3DFMT_L6V5U5 = 0x2A200B45,
  D3DFMT_LIN_L6V5U5 = 0x2A200A45,
  D3DFMT_X1R5G5B5 = 0x28280143,
  D3DFMT_LIN_X1R5G5B5 = 0x28280043,
  D3DFMT_A1R5G5B5 = 0x18280143,
  D3DFMT_LIN_A1R5G5B5 = 0x18280043,
  D3DFMT_A4R4G4B4 = 0x1828014F,
  D3DFMT_LIN_A4R4G4B4 = 0x1828004F,
  D3DFMT_X4R4G4B4 = 0x2828014F,
  D3DFMT_LIN_X4R4G4B4 = 0x2828004F,
  D3DFMT_Q4W4V4U4 = 0x1A20AB4F,
  D3DFMT_LIN_Q4W4V4U4 = 0x1A20AA4F,
  D3DFMT_A8L8 = 0x800014A,
  D3DFMT_LIN_A8L8 = 0x800004A,
  D3DFMT_G8R8 = 0x2D20014A,
  D3DFMT_LIN_G8R8 = 0x2D20004A,
  D3DFMT_V8U8 = 0x2D20AB4A,
  D3DFMT_LIN_V8U8 = 0x2D20AA4A,
  D3DFMT_D16 = 0x1A220158,
  D3DFMT_LIN_D16 = 0x1A220058,
  D3DFMT_L16 = 0x28000158,
  D3DFMT_LIN_L16 = 0x28000058,
  D3DFMT_R16F = 0x2DA2AB5E,
  D3DFMT_LIN_R16F = 0x2DA2AA5E,
  D3DFMT_R16F_EXPAND = 0x2DA2AB5B,
  D3DFMT_LIN_R16F_EXPAND = 0x2DA2AA5B,
  D3DFMT_UYVY = 0x1A20014C,
  D3DFMT_LIN_UYVY = 0x1A20004C,
  D3DFMT_LE_UYVY = 0x1A20010C,
  D3DFMT_LE_LIN_UYVY = 0x1A20000C,
  D3DFMT_G8R8_G8B8 = 0x1828014C,
  D3DFMT_LIN_G8R8_G8B8 = 0x1828004C,
  D3DFMT_R8G8_B8G8 = 0x1828014B,
  D3DFMT_LIN_R8G8_B8G8 = 0x1828004B,
  D3DFMT_YUY2 = 0x1A20014B,
  D3DFMT_LIN_YUY2 = 0x1A20004B,
  D3DFMT_LE_YUY2 = 0x1A20010B,
  D3DFMT_LE_LIN_YUY2 = 0x1A20000B,
  D3DFMT_A8R8G8B8 = 0x18280186,
  D3DFMT_LIN_A8R8G8B8 = 0x18280086,
  D3DFMT_X8R8G8B8 = 0x28280186,
  D3DFMT_LIN_X8R8G8B8 = 0x28280086,
  D3DFMT_A8B8G8R8 = 0x1A200186,
  D3DFMT_LIN_A8B8G8R8 = 0x1A200086,
  D3DFMT_X8B8G8R8 = 0x2A200186,
  D3DFMT_LIN_X8B8G8R8 = 0x2A200086,
  D3DFMT_X8L8V8U8 = 0x2A200B86,
  D3DFMT_LIN_X8L8V8U8 = 0x2A200A86,
  D3DFMT_Q8W8V8U8 = 0x1A20AB86,
  D3DFMT_LIN_Q8W8V8U8 = 0x1A20AA86,
  D3DFMT_A2R10G10B10 = 0x182801B6,
  D3DFMT_LIN_A2R10G10B10 = 0x182800B6,
  D3DFMT_X2R10G10B10 = 0x282801B6,
  D3DFMT_LIN_X2R10G10B10 = 0x282800B6,
  D3DFMT_A2B10G10R10 = 0x1A2001B6,
  D3DFMT_LIN_A2B10G10R10 = 0x1A2000B6,
  D3DFMT_A2W10V10U10 = 0x1A202BB6,
  D3DFMT_LIN_A2W10V10U10 = 0x1A202AB6,
  D3DFMT_A16L16 = 0x8000199,
  D3DFMT_LIN_A16L16 = 0x8000099,
  D3DFMT_G16R16 = 0x2D200199,
  D3DFMT_LIN_G16R16 = 0x2D200099,
  D3DFMT_V16U16 = 0x2D20AB99,
  D3DFMT_LIN_V16U16 = 0x2D20AA99,
  D3DFMT_R10G11B11 = 0x282801B7,
  D3DFMT_LIN_R10G11B11 = 0x282800B7,
  D3DFMT_R11G11B10 = 0x282801B8,
  D3DFMT_LIN_R11G11B10 = 0x282800B8,
  D3DFMT_W10V11U11 = 0x2A20ABB7,
  D3DFMT_LIN_W10V11U11 = 0x2A20AAB7,
  D3DFMT_W11V11U10 = 0x2A20ABB8,
  D3DFMT_LIN_W11V11U10 = 0x2A20AAB8,
  D3DFMT_G16R16F = 0x2D22AB9F,
  D3DFMT_LIN_G16R16F = 0x2D22AA9F,
  D3DFMT_G16R16F_EXPAND = 0x2D22AB9C,
  D3DFMT_LIN_G16R16F_EXPAND = 0x2D22AA9C,
  D3DFMT_L32 = 0x280001A1,
  D3DFMT_LIN_L32 = 0x280000A1,
  D3DFMT_R32F = 0x2DA2ABA4,
  D3DFMT_LIN_R32F = 0x2DA2AAA4,
  D3DFMT_D24S8 = 0x2D200196,
  D3DFMT_LIN_D24S8 = 0x2D200096,
  D3DFMT_D24X8 = 0x2DA00196,
  D3DFMT_LIN_D24X8 = 0x2DA00096,
  D3DFMT_D24FS8 = 0x1A220197,
  D3DFMT_LIN_D24FS8 = 0x1A220097,
  D3DFMT_D32 = 0x1A2201A1,
  D3DFMT_LIN_D32 = 0x1A2200A1,
  D3DFMT_A16B16G16R16 = 0x1A20015A,
  D3DFMT_LIN_A16B16G16R16 = 0x1A20005A,
  D3DFMT_Q16W16V16U16 = 0x1A20AB5A,
  D3DFMT_LIN_Q16W16V16U16 = 0x1A20AA5A,
  D3DFMT_A16B16G16R16F = 0x1A22AB60,
  D3DFMT_LIN_A16B16G16R16F = 0x1A22AA60,
  D3DFMT_A16B16G16R16F_EXPAND = 0x1A22AB5D,
  D3DFMT_LIN_A16B16G16R16F_EXPAND = 0x1A22AA5D,
  D3DFMT_A32L32 = 0x80001A2,
  D3DFMT_LIN_A32L32 = 0x80000A2,
  D3DFMT_G32R32 = 0x2D2001A2,
  D3DFMT_LIN_G32R32 = 0x2D2000A2,
  D3DFMT_V32U32 = 0x2D20ABA2,
  D3DFMT_LIN_V32U32 = 0x2D20AAA2,
  D3DFMT_G32R32F = 0x2D22ABA5,
  D3DFMT_LIN_G32R32F = 0x2D22AAA5,
  D3DFMT_A32B32G32R32 = 0x1A2001A3,
  D3DFMT_LIN_A32B32G32R32 = 0x1A2000A3,
  D3DFMT_Q32W32V32U32 = 0x1A20ABA3,
  D3DFMT_LIN_Q32W32V32U32 = 0x1A20AAA3,
  D3DFMT_A32B32G32R32F = 0x1A22ABA6,
  D3DFMT_LIN_A32B32G32R32F = 0x1A22AAA6,
  D3DFMT_A2B10G10R10F_EDRAM = 0x1A2201BF,
  D3DFMT_G16R16_EDRAM = 0x2D20AB8D,
  D3DFMT_A16B16G16R16_EDRAM = 0x1A20AB55,
  D3DFMT_LE_X8R8G8B8 = 0x28280106,
  D3DFMT_LE_A8R8G8B8 = 0x18280106,
  D3DFMT_LE_X2R10G10B10 = 0x28280136,
  D3DFMT_LE_A2R10G10B10 = 0x18280136,
  D3DFMT_INDEX16 = 0x1,
  D3DFMT_INDEX32 = 0x6,
  D3DFMT_LE_INDEX16 = 0x0,
  D3DFMT_LE_INDEX32 = 0x4,
  D3DFMT_VERTEXDATA = 0x8,
  D3DFMT_UNKNOWN = 0xFFFFFFFF,
  D3DFMT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 7227 */
struct __cppobj D3DSurface : D3DResource
{
  $3B1FD7C986AD6317C38BC230EC2E94B1 ___u1;
  $E7F10356E29CE8DC46CFB569A97181B8 ___u2;
  GPU_HICONTROL HiControl;
  unsigned __int32 : 3;
  unsigned __int32 Height : 15;
  unsigned __int32 Width : 14;
  _D3DFORMAT Format;
  unsigned int Size;
};

/* 6806 */
struct GPUTEXTURESIZE_1D
{
  unsigned __int32 Width : 24;
};

/* 6807 */
struct GPUTEXTURESIZE_2D
{
  unsigned __int32 Width : 13;
  unsigned __int32 Height : 13;
};

/* 6808 */
struct GPUTEXTURESIZE_3D
{
  unsigned __int32 Width : 11;
  unsigned __int32 Height : 11;
  unsigned __int32 Depth : 10;
};

/* 6809 */
struct GPUTEXTURESIZE_STACK
{
  unsigned __int32 Width : 13;
  unsigned __int32 Height : 13;
  unsigned __int32 Depth : 6;
};

/* 6810 */
union GPUTEXTURE_FETCH_CONSTANT::<unnamed_tag>::<unnamed_tag>
{
  GPUTEXTURESIZE_1D OneD;
  GPUTEXTURESIZE_2D TwoD;
  GPUTEXTURESIZE_3D ThreeD;
  GPUTEXTURESIZE_STACK Stack;
};

/* 6811 */
struct $4C59183E28B4D87F2A7D5CD57F6AD970
{
  unsigned __int32 Type : 2;
  unsigned __int32 SignX : 2;
  unsigned __int32 SignY : 2;
  unsigned __int32 SignZ : 2;
  unsigned __int32 SignW : 2;
  unsigned __int32 ClampX : 3;
  unsigned __int32 ClampY : 3;
  unsigned __int32 ClampZ : 3;
  unsigned __int32 : 3;
  unsigned __int32 Pitch : 9;
  unsigned __int32 Tiled : 1;
  unsigned __int32 DataFormat : 6;
  unsigned __int32 Endian : 2;
  unsigned __int32 RequestSize : 2;
  unsigned __int32 Stacked : 1;
  unsigned __int32 ClampPolicy : 1;
  unsigned __int32 BaseAddress : 20;
  GPUTEXTURE_FETCH_CONSTANT::<unnamed_tag>::<unnamed_tag> Size;
  unsigned __int32 NumFormat : 1;
  unsigned __int32 SwizzleX : 3;
  unsigned __int32 SwizzleY : 3;
  unsigned __int32 SwizzleZ : 3;
  unsigned __int32 SwizzleW : 3;
  __int32 ExpAdjust : 6;
  unsigned __int32 MagFilter : 2;
  unsigned __int32 MinFilter : 2;
  unsigned __int32 MipFilter : 2;
  unsigned __int32 AnisoFilter : 3;
  unsigned __int32 : 3;
  unsigned __int32 BorderSize : 1;
  unsigned __int32 VolMagFilter : 1;
  unsigned __int32 VolMinFilter : 1;
  unsigned __int32 MinMipLevel : 4;
  unsigned __int32 MaxMipLevel : 4;
  unsigned __int32 MagAnisoWalk : 1;
  unsigned __int32 MinAnisoWalk : 1;
  __int32 LODBias : 10;
  __int32 GradExpAdjustH : 5;
  __int32 GradExpAdjustV : 5;
  unsigned __int32 BorderColor : 2;
  unsigned __int32 ForceBCWToMax : 1;
  unsigned __int32 TriClamp : 2;
  __int32 AnisoBias : 4;
  unsigned __int32 Dimension : 2;
  unsigned __int32 PackedMips : 1;
  unsigned __int32 MipAddress : 20;
};

/* 6812 */
union GPUTEXTURE_FETCH_CONSTANT
{
  $4C59183E28B4D87F2A7D5CD57F6AD970 __s0;
  unsigned int dword[6];
};

/* 6813 */
struct __cppobj D3DBaseTexture : D3DResource
{
  unsigned int MipFlush;
  GPUTEXTURE_FETCH_CONSTANT Format;
};

/* 18765 */
struct renderengine::ProgramVariableHandle
{
  unsigned __int8 m_index;
  unsigned __int8 m_dataType;
  unsigned __int8 m_programType;
  unsigned __int8 m_numConstants;
};

/* 18766 */
struct __cppobj renderengine::VirtualDevice::VirtualVertexIterator
{
  renderengine::VirtualDevice::VirtualVertexIterator_vtbl *__vftable /*VFT*/;
};

/* 18768 */
struct /*VFT*/ renderengine::VirtualDevice::VirtualVertexIterator_vtbl
{
  unsigned int (__cdecl *GetStride)(renderengine::VirtualDevice::VirtualVertexIterator *this);
  void (__cdecl *AttachStreams)(renderengine::VirtualDevice::VirtualVertexIterator *this, const dataiterator::LocalExtents *);
  void (__cdecl *DetachStreams)(renderengine::VirtualDevice::VirtualVertexIterator *this, dataiterator::LocalExtents *);
  void (__cdecl *~VirtualVertexIterator)(renderengine::VirtualDevice::VirtualVertexIterator *this);
};

/* 18767 */
const struct dataiterator::LocalExtents
{
  void *minimum;
  void *maximum;
};

/* 18769 */
struct __cppobj renderengine::VirtualDevice::VirtualBatchIterator
{
  renderengine::VirtualDevice::VirtualBatchIterator_vtbl *__vftable /*VFT*/;
};

/* 18770 */
struct /*VFT*/ renderengine::VirtualDevice::VirtualBatchIterator_vtbl
{
  bool (__cdecl *VirtualBeginBatch)(renderengine::VirtualDevice::VirtualBatchIterator *this, unsigned int, renderengine::VirtualDevice::VirtualVertexIterator *);
  void (__cdecl *VirtualEndBatch)(renderengine::VirtualDevice::VirtualBatchIterator *this, renderengine::VirtualDevice::VirtualVertexIterator *);
  void (__cdecl *SetPrimitiveType)(renderengine::VirtualDevice::VirtualBatchIterator *this, renderengine::PrimitiveType);
  renderengine::PrimitiveType (__cdecl *GetPrimitiveType)(renderengine::VirtualDevice::VirtualBatchIterator *this);
  void (__cdecl *SetDevice)(renderengine::VirtualDevice::VirtualBatchIterator *this, D3DDevice *);
  D3DDevice *(__cdecl *GetDevice)(renderengine::VirtualDevice::VirtualBatchIterator *this);
  void (__cdecl *~VirtualBatchIterator)(renderengine::VirtualDevice::VirtualBatchIterator *this);
};

/* 6941 */
struct _D3DTAGCOLLECTION
{
  unsigned __int64 m_Mask[5];
};

/* 6945 */
union GPUFETCH_CONSTANT
{
  GPUTEXTURE_FETCH_CONSTANT Texture;
  GPUVERTEX_FETCH_CONSTANT Vertex[3];
};

/* 6946 */
struct $64F70D7A5111DB7B422EB03DA621EA09
{
  GPUTEXTURE_FETCH_CONSTANT TextureFetch[26];
  GPUVERTEX_FETCH_CONSTANT VertexFetch[18];
};

/* 6947 */
union $D9B11BD5D8BA8183807625590EF02CEF
{
  GPUFETCH_CONSTANT Fetch[32];
  $64F70D7A5111DB7B422EB03DA621EA09 __s1;
};

/* 6948 */
struct $115B007BFA6E5E59898CB6B61F7FDFEA
{
  __vector4 VertexShaderF[256];
  __vector4 PixelShaderF[256];
};

/* 6949 */
union $399DFAA959063EF95448F50EE13CA5C7
{
  __vector4 Alu[512];
  $115B007BFA6E5E59898CB6B61F7FDFEA __s1;
};

/* 6950 */
struct $081ACE603348AB52C46A69069B2E95D0
{
  unsigned int VertexShaderB[4];
  unsigned int PixelShaderB[4];
  unsigned int VertexShaderI[16];
  unsigned int PixelShaderI[16];
};

/* 6951 */
union $DAA27776E98F53C2A4C372E8AD3DEF18
{
  unsigned int Flow[40];
  $081ACE603348AB52C46A69069B2E95D0 __s1;
};

/* 6952 */
struct _D3DConstants
{
  $D9B11BD5D8BA8183807625590EF02CEF ___u0;
  $399DFAA959063EF95448F50EE13CA5C7 ___u1;
  $DAA27776E98F53C2A4C372E8AD3DEF18 ___u2;
};

/* 6959 */
struct $A2C0333467281D46F32F2B9A406EF482
{
  __int32 X : 15;
  unsigned __int32 : 1;
  __int32 Y : 15;
};

/* 6960 */
union GPU_POINT
{
  $A2C0333467281D46F32F2B9A406EF482 __s0;
  unsigned int dword;
};

/* 6961 */
struct GPU_DESTINATIONPACKET
{
  GPU_SURFACEINFO SurfaceInfo;
  GPU_COLORINFO Color0Info;
  GPU_DEPTHINFO DepthInfo;
  GPU_COLORINFO Color1Info;
  GPU_COLORINFO Color2Info;
  GPU_COLORINFO Color3Info;
  unsigned int CoherDestBase0;
  unsigned int CoherDestBase1;
  unsigned int CoherDestBase2;
  unsigned int CoherDestBase3;
  unsigned int CoherDestBase4;
  unsigned int CoherDestBase5;
  unsigned int CoherDestBase6;
  unsigned int CoherDestBase7;
  GPU_POINT ScreenScissorTL;
  GPU_POINT ScreenScissorBR;
};

/* 6962 */
struct GPU_WINDOWPACKET
{
  GPU_POINT WindowOffset;
  GPU_POINT WindowScissorTL;
  GPU_POINT WindowScissorBR;
};

/* 6963 */
struct $4C97A0E9DB870CE221244CD296E9934B
{
  unsigned __int32 Write0 : 4;
  unsigned __int32 Write1 : 4;
  unsigned __int32 Write2 : 4;
  unsigned __int32 Write3 : 4;
};

/* 6964 */
union GPU_COLORMASK
{
  $4C97A0E9DB870CE221244CD296E9934B __s0;
  unsigned int dword;
};

/* 6965 */
struct $2A54E4DB9BFF6BD09CD1311E86BF3DD5
{
  unsigned __int32 Ref : 8;
  unsigned __int32 Mask : 8;
  unsigned __int32 WriteMask : 8;
};

/* 6966 */
union GPU_STENCILREFMASK
{
  $2A54E4DB9BFF6BD09CD1311E86BF3DD5 __s0;
  unsigned int dword;
};

/* 6967 */
struct GPU_VALUESPACKET
{
  unsigned int MaxVtxIndx;
  unsigned int MinVtxIndx;
  unsigned int IndxOffset;
  unsigned int MultiPrimIbResetIndx;
  GPU_COLORMASK ColorMask;
  float BlendRed;
  float BlendGreen;
  float BlendBlue;
  float BlendAlpha;
  unsigned int Unused[3];
  GPU_STENCILREFMASK StencilRefMaskBF;
  GPU_STENCILREFMASK StencilRefMask;
  float AlphaRef;
  float VportXScale;
  float VportXOffset;
  float VportYScale;
  float VportYOffset;
  float VportZScale;
  float VportZOffset;
};

/* 6968 */
struct $71553D7B2D89EB12401B79685441A3AF
{
  unsigned __int32 VsMaxReg : 6;
  unsigned __int32 : 2;
  unsigned __int32 PsMaxReg : 6;
  unsigned __int32 : 2;
  unsigned __int32 VsResource : 1;
  unsigned __int32 PsResource : 1;
  unsigned __int32 ParamGen : 1;
  unsigned __int32 GenIndexPix : 1;
  unsigned __int32 VsExportCount : 4;
  unsigned __int32 VsExportMode : 3;
  unsigned __int32 PsExportZ : 1;
  unsigned __int32 PsExportColorCount : 3;
  unsigned __int32 GenIndexVtx : 1;
};

/* 6969 */
union GPU_PROGRAMCONTROL
{
  $71553D7B2D89EB12401B79685441A3AF __s0;
  unsigned int dword;
};

/* 6970 */
struct $B7AB808BDF753F69181EDAB25D0E4899
{
  unsigned __int32 InstPredOptimize : 1;
  unsigned __int32 OutputScreenXY : 1;
  unsigned __int32 SampleControl : 2;
  unsigned __int32 : 4;
  unsigned __int32 ParamGenPos : 8;
  unsigned __int32 PerfCounterRef : 1;
  unsigned __int32 YieldOptimize : 1;
  unsigned __int32 TxCacheSelect : 1;
};

/* 6971 */
union GPU_CONTEXTMISC
{
  $B7AB808BDF753F69181EDAB25D0E4899 __s0;
  unsigned int dword;
};

/* 6972 */
struct $034F27AA47666CDC33815214F368309E
{
  unsigned __int32 ParamShade : 16;
  unsigned __int32 SamplingPattern : 16;
};

/* 6973 */
union GPU_INTERPOLATORCONTROL
{
  $034F27AA47666CDC33815214F368309E __s0;
  unsigned int dword;
};

/* 6974 */
struct $C829270B0534D0C269A8C45BC9037B1C
{
  unsigned __int32 Wrap8 : 4;
  unsigned __int32 Wrap9 : 4;
  unsigned __int32 Wrap10 : 4;
  unsigned __int32 Wrap11 : 4;
  unsigned __int32 Wrap12 : 4;
  unsigned __int32 Wrap13 : 4;
  unsigned __int32 Wrap14 : 4;
  unsigned __int32 Wrap15 : 4;
};

/* 6975 */
union GPU_WRAPPING0
{
  $C829270B0534D0C269A8C45BC9037B1C __s0;
  unsigned int dword;
};

/* 6873 */
struct $6980EB084C9E7CE5E4C7E4558ECFD5EB
{
  unsigned __int32 Wrap0 : 4;
  unsigned __int32 Wrap1 : 4;
  unsigned __int32 Wrap2 : 4;
  unsigned __int32 Wrap3 : 4;
  unsigned __int32 Wrap4 : 4;
  unsigned __int32 Wrap5 : 4;
  unsigned __int32 Wrap6 : 4;
  unsigned __int32 Wrap7 : 4;
};

/* 6874 */
union GPU_WRAPPING1
{
  $6980EB084C9E7CE5E4C7E4558ECFD5EB __s0;
  unsigned int dword;
};

/* 6976 */
struct GPU_PROGRAMPACKET
{
  GPU_PROGRAMCONTROL ProgramControl;
  GPU_CONTEXTMISC ContextMisc;
  GPU_INTERPOLATORCONTROL InterpolatorControl;
  GPU_WRAPPING0 Wrapping0;
  GPU_WRAPPING1 Wrapping1;
};

/* 6977 */
struct $EAA0C2D71C567326C66929F447D7C7BC
{
  unsigned __int32 StencilEnable : 1;
  unsigned __int32 ZEnable : 1;
  unsigned __int32 ZWriteEnable : 1;
  unsigned __int32 : 1;
  unsigned __int32 ZFunc : 3;
  unsigned __int32 BackFaceEnable : 1;
  unsigned __int32 StencilFunc : 3;
  unsigned __int32 StencilFail : 3;
  unsigned __int32 StencilZPass : 3;
  unsigned __int32 StencilZFail : 3;
  unsigned __int32 StencilFuncBF : 3;
  unsigned __int32 StencilFailBF : 3;
  unsigned __int32 StencilZPassBF : 3;
  unsigned __int32 StencilZFailBF : 3;
};

/* 6978 */
union GPU_DEPTHCONTROL
{
  $EAA0C2D71C567326C66929F447D7C7BC __s0;
  unsigned int dword;
};

/* 6979 */
struct $150A30EEBDD28F56C2493976099B2424
{
  unsigned __int32 ColorSrcBlend : 5;
  unsigned __int32 ColorBlendOp : 3;
  unsigned __int32 ColorDestBlend : 5;
  unsigned __int32 : 3;
  unsigned __int32 AlphaSrcBlend : 5;
  unsigned __int32 AlphaBlendOp : 3;
  unsigned __int32 AlphaDestBlend : 5;
};

/* 6980 */
union GPU_BLENDCONTROL
{
  $150A30EEBDD28F56C2493976099B2424 __s0;
  unsigned int dword;
};

/* 6981 */
struct $2722A3A438B46D387ED3721A24045E5E
{
  unsigned __int32 AlphaFunc : 3;
  unsigned __int32 AlphaTestEnable : 1;
  unsigned __int32 AlphaToMaskEnable : 1;
  unsigned __int32 : 19;
  unsigned __int32 AlphaToMaskOffset0 : 2;
  unsigned __int32 AlphaToMaskOffset1 : 2;
  unsigned __int32 AlphaToMaskOffset2 : 2;
  unsigned __int32 AlphaToMaskOffset3 : 2;
};

/* 6982 */
union GPU_COLORCONTROL
{
  $2722A3A438B46D387ED3721A24045E5E __s0;
  unsigned int dword;
};

/* 6985 */
struct $30277C99AD4D987BECD58EAAD21D2880
{
  unsigned __int32 ClipPlaneEnable0 : 1;
  unsigned __int32 ClipPlaneEnable1 : 1;
  unsigned __int32 ClipPlaneEnable2 : 1;
  unsigned __int32 ClipPlaneEnable3 : 1;
  unsigned __int32 ClipPlaneEnable4 : 1;
  unsigned __int32 ClipPlaneEnable5 : 1;
  unsigned __int32 : 8;
  unsigned __int32 ClipPlaneMode : 2;
  unsigned __int32 ClipDisable : 1;
  unsigned __int32 ClipPlaneCullOnlyEnable : 1;
  unsigned __int32 BoundaryEdgeFlagEnable : 1;
  unsigned __int32 DxClipSpaceDef : 1;
  unsigned __int32 DisableClipErrDetect : 1;
  unsigned __int32 VtxKillOr : 1;
  unsigned __int32 XyNanRetain : 1;
  unsigned __int32 ZNanRetain : 1;
  unsigned __int32 WNanRetain : 1;
};

/* 6986 */
union GPU_CLIPCONTROL
{
  $30277C99AD4D987BECD58EAAD21D2880 __s0;
  unsigned int dword;
};

/* 6987 */
struct $E324A595CA5DCA4B8705B60221D9127E
{
  unsigned __int32 CullMode : 3;
  unsigned __int32 PolyMode : 2;
  unsigned __int32 PolyModeFrontPType : 3;
  unsigned __int32 PolyModeBackPType : 3;
  unsigned __int32 PolyOffsetFrontEnable : 1;
  unsigned __int32 PolyOffsetBackEnable : 1;
  unsigned __int32 PolyOffsetParaEnable : 1;
  unsigned __int32 : 1;
  unsigned __int32 MsaaEnable : 1;
  unsigned __int32 VtxWindowOffsetEnable : 1;
  unsigned __int32 : 2;
  unsigned __int32 ProvokingVtxLast : 1;
  unsigned __int32 PerspCorrDisable : 1;
  unsigned __int32 MultiPrimIbEnable : 1;
  unsigned __int32 : 1;
  unsigned __int32 QuadOrderEnable : 1;
  unsigned __int32 ScOneQuadPerClock : 1;
};

/* 6988 */
union GPU_MODECONTROL
{
  $E324A595CA5DCA4B8705B60221D9127E __s0;
  unsigned int dword;
};

/* 6989 */
struct $9729478BBA60E80DE8A66A7240F37924
{
  unsigned __int32 VportXScaleEnable : 1;
  unsigned __int32 VportXOffsetEnable : 1;
  unsigned __int32 VportYScaleEnable : 1;
  unsigned __int32 VportYOffsetEnable : 1;
  unsigned __int32 VportZScaleEnable : 1;
  unsigned __int32 VportZOffsetEnable : 1;
  unsigned __int32 : 2;
  unsigned __int32 VtxXyFmt : 1;
  unsigned __int32 VtxZFmt : 1;
  unsigned __int32 VtxW0Fmt : 1;
  unsigned __int32 PerfCounterRef : 1;
};

/* 6990 */
union GPU_VTECONTROL
{
  $9729478BBA60E80DE8A66A7240F37924 __s0;
  unsigned int dword;
};

/* 6991 */
struct $7B60C00327D64B8946657EB99A7AE65B
{
  unsigned __int32 EdramMode : 3;
  unsigned __int32 ColorDepthMacro : 1;
};

/* 6992 */
union GPU_EDRAMMODECONTROL
{
  $7B60C00327D64B8946657EB99A7AE65B __s0;
  unsigned int dword;
};

/* 6993 */
struct GPU_CONTROLPACKET
{
  GPU_DEPTHCONTROL DepthControl;
  GPU_BLENDCONTROL BlendControl0;
  GPU_COLORCONTROL ColorControl;
  GPU_HICONTROL HiControl;
  GPU_CLIPCONTROL ClipControl;
  GPU_MODECONTROL ModeControl;
  GPU_VTECONTROL VteControl;
  unsigned int Unused;
  GPU_EDRAMMODECONTROL EdramModeControl;
  GPU_BLENDCONTROL BlendControl1;
  GPU_BLENDCONTROL BlendControl2;
  GPU_BLENDCONTROL BlendControl3;
};

/* 6994 */
struct $B4E993025E5411723125381D6BF22EED
{
  unsigned __int32 Height : 16;
  unsigned __int32 Width : 16;
};

/* 6995 */
union GPU_POINTSIZE
{
  $B4E993025E5411723125381D6BF22EED __s0;
  unsigned int dword;
};

/* 6996 */
struct $21F591123A23F6375C440C9F96CAEB69
{
  unsigned __int32 MinSize : 16;
  unsigned __int32 MaxSize : 16;
};

/* 6997 */
union GPU_POINTMINMAX
{
  $21F591123A23F6375C440C9F96CAEB69 __s0;
  unsigned int dword;
};

/* 6998 */
struct $DE593D6BCAF6191E3F2602A4EE440B31
{
  unsigned __int32 Width : 16;
};

/* 6999 */
union GPU_LINECONTROL
{
  $DE593D6BCAF6191E3F2602A4EE440B31 __s0;
  unsigned int dword;
};

/* 7000 */
struct $6643AD536BA1416F27C58158F69E224D
{
  unsigned __int32 PathSelect : 2;
};

/* 7001 */
union GPU_OUTPUTPATHCONTROL
{
  $6643AD536BA1416F27C58158F69E224D __s0;
  unsigned int dword;
};

/* 7002 */
struct $9C0FA776DCE0CEF28A3080529A0833BF
{
  unsigned __int32 TessMode : 2;
};

/* 7003 */
union GPU_HOSCONTROL
{
  $9C0FA776DCE0CEF28A3080529A0833BF __s0;
  unsigned int dword;
};

/* 7004 */
struct $0155778B40C0F91675BCDFFA23C7C745
{
  unsigned __int32 GroupPrimType : 4;
  unsigned __int32 : 10;
  unsigned __int32 GroupRetainOrder : 1;
  unsigned __int32 GroupRetainQuads : 1;
  unsigned __int32 GroupPrimOrder : 3;
};

/* 7005 */
union GPU_GROUPPRIMTYPE
{
  $0155778B40C0F91675BCDFFA23C7C745 __s0;
  unsigned int dword;
};

/* 7006 */
struct $799B73217A750012B2D231F9F49E8B35
{
  unsigned __int32 CompXEnable : 1;
  unsigned __int32 CompYEnable : 1;
  unsigned __int32 CompZEnable : 1;
  unsigned __int32 CompWEnable : 1;
  unsigned __int32 : 4;
  unsigned __int32 Stride : 8;
  unsigned __int32 Shift : 8;
};

/* 7007 */
union GPU_GROUPVECTCONTROL
{
  $799B73217A750012B2D231F9F49E8B35 __s0;
  unsigned int dword;
};

/* 7008 */
struct $0B5F7FB2731F71913AC6525C5F302169
{
  unsigned __int32 XConv : 4;
  unsigned __int32 XOffset : 4;
  unsigned __int32 YConv : 4;
  unsigned __int32 YOffset : 4;
  unsigned __int32 ZConv : 4;
  unsigned __int32 ZOffset : 4;
  unsigned __int32 WConv : 4;
  unsigned __int32 WOffset : 4;
};

/* 7009 */
union GPU_GROUPVECTFMTCONTROL
{
  $0B5F7FB2731F71913AC6525C5F302169 __s0;
  unsigned int dword;
};

/* 7010 */
struct $6244E7DDCD1AD4A14A2E89B4570F1F29
{
  unsigned __int32 MPassPixVecPerPass : 20;
  unsigned __int32 : 11;
  unsigned __int32 MPassPsEnable : 1;
};

/* 7011 */
union GPU_MPASSPSCONTROL
{
  $6244E7DDCD1AD4A14A2E89B4570F1F29 __s0;
  unsigned int dword;
};

/* 7012 */
struct $28A3CE7FC9E89F58D9643E379F323C10
{
  unsigned __int32 VizQueryEnable : 1;
  unsigned __int32 VizQueryId : 6;
  unsigned __int32 KillPixPostHiZ : 1;
  unsigned __int32 KillPixPostDetailMask : 1;
};

/* 7013 */
union GPU_VIZQUERY
{
  $28A3CE7FC9E89F58D9643E379F323C10 __s0;
  unsigned int dword;
};

/* 7014 */
struct $BE2E1A1E838C74965C6FB7961EA0C7FD
{
  unsigned __int32 Misc : 16;
};

/* 7015 */
union GPU_ENHANCE
{
  $BE2E1A1E838C74965C6FB7961EA0C7FD __s0;
  unsigned int dword;
};

/* 7016 */
struct GPU_TESSELLATORPACKET
{
  GPU_POINTSIZE PointSize;
  GPU_POINTMINMAX PointMinMax;
  GPU_LINECONTROL LineControl;
  unsigned int Unused1;
  GPU_OUTPUTPATHCONTROL OutputPathControl;
  GPU_HOSCONTROL HosControl;
  float HosMaxTessLevel;
  float HosMinTessLevel;
  unsigned int HosReuseDepth;
  GPU_GROUPPRIMTYPE GroupPrimType;
  unsigned int GroupFirstDecr;
  unsigned int GroupDecr;
  GPU_GROUPVECTCONTROL GroupVect0Control;
  GPU_GROUPVECTCONTROL GroupVect1Control;
  GPU_GROUPVECTFMTCONTROL GroupVect0FmtControl;
  GPU_GROUPVECTFMTCONTROL GroupVect1FmtControl;
  unsigned int Unused2[2];
  GPU_MPASSPSCONTROL MPassPsControl;
  GPU_VIZQUERY VizQuery;
  GPU_ENHANCE Enhance;
};

/* 7017 */
struct $8F9DF130A6CCCA69B8D6DFFCF09200E1
{
  unsigned __int32 BresControl : 8;
  unsigned __int32 UseBresControl : 1;
  unsigned __int32 ExpandLineWidth : 1;
  unsigned __int32 LastPixel : 1;
};

/* 7018 */
union GPU_SCLINECONTROL
{
  $8F9DF130A6CCCA69B8D6DFFCF09200E1 __s0;
  unsigned int dword;
};

/* 7019 */
struct $3AF4D34B2D9376B8BD39229DD96AC1BD
{
  unsigned __int32 MsaaNumSamples : 3;
  unsigned __int32 : 10;
  unsigned __int32 MaxSampleDist : 4;
};

/* 7020 */
union GPU_AACONFIG
{
  $3AF4D34B2D9376B8BD39229DD96AC1BD __s0;
  unsigned int dword;
};

/* 7021 */
struct $DBE43B421104E02770B44F2F33EBDBD8
{
  unsigned __int32 PixCenter : 1;
  unsigned __int32 RoundMode : 2;
  unsigned __int32 QuantMode : 3;
};

/* 7022 */
union GPU_VTXCONTROL
{
  $DBE43B421104E02770B44F2F33EBDBD8 __s0;
  unsigned int dword;
};

/* 7023 */
struct $3EB705BCDCACE962E566926E3B38971A
{
  unsigned __int32 Base : 9;
  unsigned __int32 : 3;
  unsigned __int32 Size : 9;
};

/* 7024 */
union GPU_CONST
{
  $3EB705BCDCACE962E566926E3B38971A __s0;
  unsigned int dword;
};

/* 7025 */
struct $1159CFFB2209C7C3108222E7CF353531
{
  unsigned __int32 DbProgOn : 1;
  unsigned __int32 : 3;
  unsigned __int32 DbProbBreak : 1;
  unsigned __int32 : 3;
  unsigned __int32 DbProbAddr : 11;
  unsigned __int32 : 5;
  unsigned __int32 DbProbCount : 8;
};

/* 7026 */
union GPU_DEBUGMISC0
{
  $1159CFFB2209C7C3108222E7CF353531 __s0;
  unsigned int dword;
};

/* 7027 */
struct $F45DA8B48658383FEE32658416603D0C
{
  unsigned __int32 DbOnPix : 1;
  unsigned __int32 DbOnVtx : 1;
  unsigned __int32 : 6;
  unsigned __int32 DbInstCount : 8;
  unsigned __int32 DbBreakAddr : 11;
};

/* 7028 */
union GPU_DEBUGMISC1
{
  $F45DA8B48658383FEE32658416603D0C __s0;
  unsigned int dword;
};

/* 7029 */
struct $CDEB2FA28DF011752353CC10A56290F0
{
  unsigned __int32 VtxReuseDepth : 8;
};

/* 7030 */
union GPU_VERTEXREUSEBLOCKCONTROL
{
  $CDEB2FA28DF011752353CC10A56290F0 __s0;
  unsigned int dword;
};

/* 7031 */
struct $ED982AC2C35D828DEC833A025400A5DC
{
  unsigned __int32 DeallocDist : 7;
};

/* 7032 */
union GPU_OUTDEALLOCCONTROL
{
  $ED982AC2C35D828DEC833A025400A5DC __s0;
  unsigned int dword;
};

/* 7033 */
struct $49BB4D33E1B5B93C9451F036DC9337A8
{
  unsigned __int32 CopySrcSelect : 3;
  unsigned __int32 : 1;
  unsigned __int32 CopySampleSelect : 3;
  unsigned __int32 : 1;
  unsigned __int32 ColorClearEnable : 1;
  unsigned __int32 DepthClearEnable : 1;
  unsigned __int32 : 10;
  unsigned __int32 CopyCommand : 2;
};

/* 7034 */
union GPU_COPYCONTROL
{
  $49BB4D33E1B5B93C9451F036DC9337A8 __s0;
  unsigned int dword;
};

/* 7035 */
struct $7CE26106D6F0AF90839E655B03B3853E
{
  unsigned __int32 CopyDestPitch : 14;
  unsigned __int32 : 2;
  unsigned __int32 CopyDestHeight : 14;
};

/* 7036 */
union GPU_COPYDESTPITCH
{
  $7CE26106D6F0AF90839E655B03B3853E __s0;
  unsigned int dword;
};

/* 7037 */
struct $6B8B16896E5E55FA308C68200DF96F84
{
  unsigned __int32 CopyDestEndian : 3;
  unsigned __int32 CopyDestArray : 1;
  unsigned __int32 CopyDestSlice : 3;
  unsigned __int32 CopyDestFormat : 6;
  unsigned __int32 CopyDestNumber : 3;
  unsigned __int32 CopyDestExpBias : 6;
  unsigned __int32 : 2;
  unsigned __int32 CopyDestSwap : 1;
};

/* 7038 */
union GPU_COPYDESTINFO
{
  $6B8B16896E5E55FA308C68200DF96F84 __s0;
  unsigned int dword;
};

/* 7039 */
struct $7DD29894D11AEA53E1202214F5062DD8
{
  unsigned __int32 CopyFuncRed : 3;
  unsigned __int32 : 1;
  unsigned __int32 CopyFuncGreen : 3;
  unsigned __int32 : 1;
  unsigned __int32 CopyFuncBlue : 3;
  unsigned __int32 : 1;
  unsigned __int32 CopyFuncAlpha : 3;
};

/* 7040 */
union GPU_COPYFUNC
{
  $7DD29894D11AEA53E1202214F5062DD8 __s0;
  unsigned int dword;
};

/* 7041 */
struct $432EDF00C4C9EED3BD2386A7B2B7E909
{
  unsigned __int32 CopyRefRed : 8;
  unsigned __int32 CopyRefGreen : 8;
  unsigned __int32 CopyRefBlue : 8;
  unsigned __int32 CopyRefAlpha : 8;
};

/* 7042 */
union GPU_COPYREF
{
  $432EDF00C4C9EED3BD2386A7B2B7E909 __s0;
  unsigned int dword;
};

/* 7043 */
struct $E8E0F97045669E6EDC91D0E0D98B4BB3
{
  unsigned __int32 CopyMaskRed : 8;
  unsigned __int32 CopyMaskGreen : 8;
  unsigned __int32 CopyMaskBlue : 8;
  unsigned __int32 CopyMaskAlpha : 8;
};

/* 7044 */
union GPU_COPYMASK
{
  $E8E0F97045669E6EDC91D0E0D98B4BB3 __s0;
  unsigned int dword;
};

/* 7045 */
struct $FBD7574F7E4129E548765D743E467685
{
  unsigned __int32 ResetSampleCount : 1;
  unsigned __int32 CopySampleCount : 1;
};

/* 7046 */
union GPU_SAMPLECOUNTCONTROL
{
  $FBD7574F7E4129E548765D743E467685 __s0;
  unsigned int dword;
};

/* 7047 */
struct GPU_MISCPACKET
{
  GPU_SCLINECONTROL ScLineControl;
  GPU_AACONFIG AaConfig;
  GPU_VTXCONTROL VtxControl;
  float GbVertClipAdj;
  float GbVertDiscAdj;
  float GbHorzClipAdj;
  float GbHorzDiscAdj;
  GPU_CONST VsConst;
  GPU_CONST PsConst;
  GPU_DEBUGMISC0 DebugMisc0;
  GPU_DEBUGMISC1 DebugMisc1;
  unsigned int Unused1[5];
  unsigned int Unused2[2];
  unsigned int AaMask;
  unsigned int Unused3[3];
  GPU_VERTEXREUSEBLOCKCONTROL VertexReuseBlockControl;
  GPU_OUTDEALLOCCONTROL OutDeallocControl;
  GPU_COPYCONTROL CopyControl;
  unsigned int CopyDestBase;
  GPU_COPYDESTPITCH CopyDestPitch;
  GPU_COPYDESTINFO CopyDestInfo;
  unsigned int HiClear;
  unsigned int DepthClear;
  unsigned int ColorClear;
  unsigned int ColorClearLo;
  GPU_COPYFUNC CopyFunc;
  GPU_COPYREF CopyRef;
  GPU_COPYMASK CopyMask;
  unsigned int CopySurfaceSlice;
  GPU_SAMPLECOUNTCONTROL SampleCountControl;
  unsigned int SampleCountAddress;
};

/* 7048 */
struct GPU_POINTPACKET
{
  float PolyOffsetFrontScale;
  float PolyOffsetFrontOffset;
  float PolyOffsetBackScale;
  float PolyOffsetBackOffset;
  float PointXRad;
  float PointYRad;
  float PointConstantSize;
  float PointCullRad;
};

/* 6942 */
struct D3DDevice
{
  _D3DTAGCOLLECTION m_Pending;
  unsigned __int64 m_Predicated_PendingMask2;
  unsigned int *m_pRing;
  unsigned int *m_pRingLimit;
  unsigned int *m_pRingGuarantee;
  unsigned int m_ReferenceCount;
  void (__cdecl *m_SetRenderStateCall[101])(D3DDevice *, unsigned int);
  void (__cdecl *m_SetSamplerStateCall[20])(D3DDevice *, unsigned int, unsigned int);
  unsigned int (__cdecl *m_GetRenderStateCall[101])(D3DDevice *);
  unsigned int (__cdecl *m_GetSamplerStateCall[20])(D3DDevice *, unsigned int);
  __declspec(align(128)) _D3DConstants m_Constants;
  float m_ClipPlanes[6][4];
  GPU_DESTINATIONPACKET m_DestinationPacket;
  GPU_WINDOWPACKET m_WindowPacket;
  GPU_VALUESPACKET m_ValuesPacket;
  GPU_PROGRAMPACKET m_ProgramPacket;
  GPU_CONTROLPACKET m_ControlPacket;
  GPU_TESSELLATORPACKET m_TessellatorPacket;
  GPU_MISCPACKET m_MiscPacket;
  GPU_POINTPACKET m_PointPacket;
};

/* 18771 */
struct __cppobj renderengine::PixelBuffer : D3DSurface
{
  renderengine::PixelBuffer::Type m_type;
};

/* 18772 */
struct __cppobj renderengine::VirtualDevice
{
  renderengine::VirtualDevice_vtbl *__vftable /*VFT*/;
};

/* 18784 */
struct /*VFT*/ renderengine::VirtualDevice_vtbl
{
  renderengine::PixelBuffer *(__cdecl *GetBackBuffer)(renderengine::VirtualDevice *this);
  renderengine::PixelBuffer *(__cdecl *GetDepthStencilBuffer)(renderengine::VirtualDevice *this);
  const renderengine::RenderTargetState *(__cdecl *GetDefaultRenderTargetState)(renderengine::VirtualDevice *this);
  bool (__cdecl *LockFrontBuffer)(renderengine::VirtualDevice *this, renderengine::Device::LockedFrontBuffer *);
  void (__cdecl *UnlockFrontBuffer)(renderengine::VirtualDevice *this, renderengine::Device::LockedFrontBuffer *);
  bool (__cdecl *FrameBegin)(renderengine::VirtualDevice *this);
  void (__cdecl *FrameEnd)(renderengine::VirtualDevice *this);
  void (__cdecl *ShowPixelBuffer)(renderengine::VirtualDevice *this, renderengine::PixelBuffer *);
  void (__cdecl *Flush)(renderengine::VirtualDevice *this);
  void (__cdecl *BlockUntilIdle)(renderengine::VirtualDevice *this);
  unsigned int (__cdecl *InsertFence)(renderengine::VirtualDevice *this);
  bool (__cdecl *IsFencePending)(renderengine::VirtualDevice *this, unsigned int);
  void (__cdecl *BlockUntilFence)(renderengine::VirtualDevice *this, unsigned int);
  unsigned int (__cdecl *GetMaxNumPendingFences)(renderengine::VirtualDevice *this);
  unsigned int (__cdecl *GetCurrentFrameIndex)(renderengine::VirtualDevice *this);
  bool (__cdecl *IsFrameFinished)(renderengine::VirtualDevice *this, unsigned int);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::ProgramVariableState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::VertexProgramState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::RasterizerState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::DepthStencilState *, unsigned int);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::DepthStencilState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::BlendState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::RenderTargetState *);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::SamplerState *, unsigned int);
  void (__cdecl *SetState)(renderengine::VirtualDevice *this, const renderengine::SamplerState *, const renderengine::ProgramVariableHandle *);
  void (__cdecl *SetPixelProgram)(renderengine::VirtualDevice *this, const renderengine::ProgramBuffer *);
  void (__cdecl *SetResource)(renderengine::VirtualDevice *this, renderengine::Texture *, const renderengine::ProgramVariableHandle *);
  void (__cdecl *SetResource)(renderengine::VirtualDevice *this, renderengine::Texture *, unsigned int);
  void (__cdecl *SetResource)(renderengine::VirtualDevice *this, renderengine::VertexBuffer *, unsigned int, unsigned int);
  void (__cdecl *SetResource)(renderengine::VirtualDevice *this, renderengine::IndexBuffer *, unsigned int);
  void (__cdecl *DisableSamplerState)(renderengine::VirtualDevice *this, unsigned int);
  void (__cdecl *DisableRenderTargetState)(renderengine::VirtualDevice *this);
  void (__cdecl *DisableBlendState)(renderengine::VirtualDevice *this);
  void (__cdecl *DisableDepthStencilState)(renderengine::VirtualDevice *this);
  void (__cdecl *DisableRasterizerState)(renderengine::VirtualDevice *this);
  void (__cdecl *DisableVertexProgramState)(renderengine::VirtualDevice *this);
  void (__cdecl *SetViewport)(renderengine::VirtualDevice *this, const renderengine::ViewportParameters *, renderengine::RenderTargetState::TargetID);
  void (__cdecl *SetScissorRect)(renderengine::VirtualDevice *this, const renderengine::ScissorRectParameters *, renderengine::RenderTargetState::TargetID);
  void (__cdecl *Draw)(renderengine::VirtualDevice *this, const renderengine::DrawIndexedInstancedParameters *);
  void (__cdecl *Draw)(renderengine::VirtualDevice *this, const renderengine::DrawInstancedParameters *);
  void (__cdecl *Draw)(renderengine::VirtualDevice *this, const renderengine::DrawIndexedParameters *);
  void (__cdecl *Draw)(renderengine::VirtualDevice *this, const renderengine::DrawParameters *);
  bool (__cdecl *BeginConditionalRenderQuery)(renderengine::VirtualDevice *this, unsigned int);
  void (__cdecl *EndConditionalRenderQuery)(renderengine::VirtualDevice *this);
  void (__cdecl *BeginConditionalRendering)(renderengine::VirtualDevice *this, unsigned int);
  void (__cdecl *EndConditionalRendering)(renderengine::VirtualDevice *this);
  void (__cdecl *Clear)(renderengine::VirtualDevice *this, const renderengine::ClearColorParameters *, const renderengine::ClearDepthStencilParameters *, renderengine::RenderTargetState::TargetID);
  void (__cdecl *Clear)(renderengine::VirtualDevice *this, const renderengine::ClearDepthStencilParameters *);
  void (__cdecl *Clear)(renderengine::VirtualDevice *this, const renderengine::ClearColorParameters *, renderengine::RenderTargetState::TargetID);
  void (__cdecl *Dispatch)(renderengine::VirtualDevice *this, const renderengine::StateBuffer *);
  void (__cdecl *BeginShaderStates)(renderengine::VirtualDevice *this, const renderengine::ProgramVariableHandle *, renderengine::FloatShaderStateIterator *);
  void (__cdecl *EndShaderStates)(renderengine::VirtualDevice *this, renderengine::FloatShaderStateIterator *);
  void (__cdecl *~VirtualDevice)(renderengine::VirtualDevice *this);
  bool (__cdecl *VirtualBeginDirectDraw)(renderengine::VirtualDevice *this, const renderengine::Device::DirectDraw::Parameters *, renderengine::VirtualDevice::VirtualBatchIterator *);
  void (__cdecl *VirtualEndDirectDraw)(renderengine::VirtualDevice *this, renderengine::VirtualDevice::VirtualBatchIterator *);
  renderengine::VirtualDevice::VirtualBatchIterator *(__cdecl *BeginDirectDrawDeviceBatchIterator)(renderengine::VirtualDevice *this);
  void (__cdecl *EndDirectDrawDeviceBatchIterator)(renderengine::VirtualDevice *this, renderengine::VirtualDevice::VirtualBatchIterator *);
};

/* 18773 */
struct renderengine::Device::LockedFrontBuffer
{
  const void *pixelData;
  renderengine::PixelFormat format;
  unsigned int pitch;
  unsigned __int16 width;
  unsigned __int16 height;
};

/* 18774 */
const struct __cppobj renderengine::ProgramVariableState
{
  const renderengine::ProgramBuffer *m_programBuffer;
  const renderengine::ProgramVariableBuffer *m_programVariableBuffer;
  renderengine::ProgramBuffer::Type m_programType;
  unsigned __int16 m_index;
  unsigned __int16 m_numConstants;
};

/* 18775 */
struct __cppobj renderengine::Texture : D3DBaseTexture
{
};

/* 7480 */
struct _D3DVIEWPORTF9
{
  float X;
  float Y;
  float Width;
  float Height;
  float MinZ;
  float MaxZ;
  unsigned int Flags;
};

/* 18776 */
const struct __cppobj renderengine::ViewportParameters
{
  _D3DVIEWPORTF9 m_d3dViewport;
};

/* 7398 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 18777 */
const struct __cppobj renderengine::ScissorRectParameters
{
  tagRECT m_rect;
};

/* 18778 */
const struct __cppobj renderengine::DrawIndexedInstancedParameters
{
  unsigned int m_startIndex;
  unsigned int m_instanceIndexCount;
  unsigned int m_instanceCount;
  unsigned int m_startInstance;
  unsigned int m_baseVertexIndex;
  _D3DPRIMITIVETYPE m_primitiveType;
};

/* 18779 */
const struct __cppobj renderengine::DrawInstancedParameters
{
  unsigned int m_startVertex;
  unsigned int m_instanceVertexCount;
  unsigned int m_startInstance;
  unsigned int m_instanceCount;
  _D3DPRIMITIVETYPE m_primitiveType;
};

/* 18780 */
const struct __cppobj renderengine::ClearColorParameters
{
  renderengine::RGBA32 color;
};

/* 18781 */
const struct __cppobj renderengine::ClearDepthStencilParameters
{
  unsigned int flags;
  float depthValue;
  unsigned int stencilValue;
};

/* 18782 */
struct renderengine::FloatShaderStateIterator
{
  rw::math::vpu::Vector4 *m_dest;
  renderengine::ProgramVariableHandle m_handle;
  int m_numConstantsToWrite;
};

/* 18783 */
const struct __cppobj renderengine::Device::DirectDraw::Parameters
{
  renderengine::PrimitiveType m_primType;
};

/* 18785 */
struct __cppobj renderengine::VirtualDevice::DirectDraw
{
};

/* 18786 */
struct __cppobj renderengine::VirtualDevice::DirectDraw::BatchIterator
{
  renderengine::VirtualDevice::VirtualBatchIterator *m_virtualIterator;
};

/* 18787 */
struct __cppobj renderengine::UserVertexIterator : renderengine::VertexIteratorBaseClass
{
};

/* 18788 */
struct __cppobj renderengine::VertexBuffer::Parameters
{
  unsigned int type;
  unsigned int bufferSize;
};

/* 18789 */
struct __cppobj renderengine::VertexBuffer::LockParameters
{
  unsigned int jobId;
  unsigned int regionOffset;
  unsigned int regionSize;
  unsigned int lockFlags;
};

/* 18790 */
struct __cppobj __declspec(align(4)) renderengine::VertexBuffer::BatchIterator
{
  unsigned __int8 *m_lockedBuffer;
  renderengine::VertexBuffer *m_vb;
  unsigned int m_flags;
  unsigned int m_bufferSize;
  bool m_inBatch;
};

/* 18791 */
struct __cppobj renderengine::IndexBuffer::Parameters
{
  unsigned int type;
  unsigned int depth;
  unsigned int numIndices;
};

/* 18792 */
struct __cppobj renderengine::IndexBuffer::LockParameters
{
  unsigned int jobId;
  unsigned int d3dFlags;
};

/* 18793 */
struct renderengine::IndexBuffer::Locked
{
  void *indices;
  _D3DFORMAT format;
};

/* 18794 */
struct __cppobj renderengine::Texture2D::Parameters
{
  unsigned int flags;
  unsigned int width;
  unsigned int height;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
};

/* 18795 */
struct __cppobj renderengine::Texture2D : renderengine::Texture
{
};

/* 18796 */
struct renderengine::Texture::Locked
{
  renderengine::Texture *texture;
  void *pixelData;
  unsigned int stride;
  unsigned __int16 width;
  unsigned __int16 height;
  unsigned __int16 volumeDepth;
  unsigned __int8 mipLevel;
  unsigned __int8 index;
  unsigned int sliceStride;
  unsigned int lockFlags;
};

/* 18797 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeD3DColor> : renderengine::VertexIteratorBaseClass
{
};

/* 18798 */
struct __cppobj renderengine::TextureCube::Parameters
{
  unsigned int flags;
  unsigned int edgeLength;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
};

/* 18799 */
struct __cppobj renderengine::TextureCube : renderengine::Texture
{
};

/* 18800 */
struct __cppobj renderengine::StateBuffer::ViewportParameters
{
  renderengine::ViewportParameters viewport;
  renderengine::RenderTargetState::TargetID id;
};

/* 18801 */
struct __cppobj renderengine::StateBuffer::ScissorRectParameters
{
  renderengine::ScissorRectParameters scissor;
  renderengine::RenderTargetState::TargetID id;
};

/* 18802 */
struct __cppobj __declspec(align(16)) renderengine::StateBuffer::ClearColorParameters
{
  renderengine::ClearColorParameters clear;
  renderengine::RenderTargetState::TargetID id;
};

/* 18803 */
struct renderengine::StateBuffer::SamplerParameters
{
  void *object;
  renderengine::ProgramVariableHandle varHandle;
};

/* 18804 */
struct renderengine::StateBuffer::IndexBufferParameters
{
  renderengine::IndexBuffer *indexBuffer;
  unsigned int id;
};

/* 18805 */
struct renderengine::StateBuffer::VertexBufferParameters
{
  renderengine::VertexBuffer *vertexBuffer;
  unsigned int id;
  unsigned int offset;
};

/* 18806 */
struct renderengine::StateBuffer::ObjectDescriptor
{
  renderengine::StateBuffer::CommandToken commandToken;
  unsigned int size;
};

/* 18807 */
struct __cppobj __declspec(align(4)) renderengine::VertexProgramState::Parameters
{
  const renderengine::ProgramBuffer *vertexProgram;
  const renderengine::VertexDescriptor *vertexDescriptor;
  bool discardVertexProgram;
  bool discardVertexDescriptor;
};

/* 18808 */
struct __cppobj renderengine::Texture1D::Parameters
{
  unsigned int flags;
  unsigned int width;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
};

/* 18809 */
struct __cppobj renderengine::Texture1D : renderengine::Texture
{
};

/* 18810 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeShort2> : renderengine::VertexIteratorBaseClass
{
};

/* 18811 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeFloat2> : renderengine::VertexIteratorBaseClass
{
};

/* 18812 */
struct __cppobj renderengine::Texture2DArray::Parameters
{
  unsigned int flags;
  unsigned int width;
  unsigned int height;
  unsigned int arraySize;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
};

/* 18813 */
struct __cppobj renderengine::Texture2DArray : renderengine::Texture
{
};

/* 18814 */
struct renderengine::BoolShaderStateIterator
{
  int *m_dest;
  renderengine::ProgramVariableHandle m_handle;
  int m_numConstantsToWrite;
};

/* 18815 */
struct renderengine::VectorI4
{
  int elements[4];
};

/* 18816 */
struct __declspec(align(2)) renderengine::ProgramConstantHandle
{
  const char *m_name;
  unsigned __int8 m_index;
  unsigned __int8 m_dataType;
  unsigned __int8 m_numConstants;
};

/* 18817 */
struct __cppobj renderengine::VertexBufferHelper::Parameters : renderengine::VertexBuffer::Parameters
{
  unsigned int numVertices;
  renderengine::VertexFormat elementFormats[16];
  unsigned int numElements;
  unsigned int stride;
};

/* 18818 */
struct __cppobj renderengine::VertexBufferHelper : renderengine::VertexBuffer
{
};

/* 18819 */
struct __cppobj renderengine::ProgramVariableState::Parameters
{
  const renderengine::ProgramVariableBuffer *programVariableBuffer;
  unsigned int registerRangeStart;
  unsigned int registerRangeNumRegisters;
  const renderengine::ProgramBuffer *programBuffer;
  unsigned int numUsedHandles;
  renderengine::ProgramVariableHandle handles[256];
};

/* 18820 */
struct renderengine::ProgramBuffer::_ShaderParts
{
  void *pCachedPart;
  unsigned int cachedPartSize;
  void *pPhysicalPart;
  unsigned int physicalPartSize;
  renderengine::ProgramConstantHandle *pConstantTable;
  unsigned int constantTableSize;
  unsigned int numParameters;
};

/* 18821 */
struct __cppobj renderengine::ProgramBuffer::Parameters
{
  void *m_buffer;
  renderengine::ProgramBuffer::Type m_type;
  unsigned int m_size;
  renderengine::ProgramBuffer::_ShaderParts m_parts;
};

/* 18822 */
struct __cppobj renderengine::ProgramBufferHelper::ConstNonCopyParameters : renderengine::ProgramBuffer::Parameters
{
};

/* 18823 */
struct __cppobj renderengine::ProgramBufferHelper::SourceParameters : renderengine::ProgramBufferHelper::ConstNonCopyParameters
{
  ID3DXBuffer *m_binary;
};

/* 6841 */
struct __cppobj IUnknown
{
  IUnknown_vtbl *__vftable /*VFT*/;
};

/* 7071 */
struct __cppobj ID3DXBuffer : IUnknown
{
};

/* 41464 */
typedef int HRESULT;

/* 6842 */
struct /*VFT*/ IUnknown_vtbl
{
  HRESULT (__cdecl *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__cdecl *AddRef)(IUnknown *this);
  unsigned int (__cdecl *Release)(IUnknown *this);
};

/* 6796 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 18824 */
struct __cppobj renderengine::ProgramBufferHelper::FromSourceStringParameters : renderengine::ProgramBufferHelper::SourceParameters
{
};

/* 18825 */
struct __cppobj renderengine::ProgramBufferHelper : renderengine::ProgramBuffer
{
};

/* 18826 */
struct __cppobj renderengine::StrideVertexIterator : renderengine::VertexIteratorBaseClass
{
  renderengine::VertexDescriptor *m_vbDesc;
};

/* 18827 */
struct renderengine::IntShaderStateIterator
{
  int *m_dest;
  renderengine::ProgramVariableHandle m_handle;
  int m_numConstantsToWrite;
};

/* 25 */
enum _D3DFILLMODE : __int32
{
  D3DFILL_POINT = 0x1,
  D3DFILL_WIREFRAME = 0x25,
  D3DFILL_SOLID = 0x0,
  D3DFILL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 192 */
enum GPUCULL : __int32
{
  GPUCULL_NONE_FRONTFACE_CCW = 0x0,
  GPUCULL_FRONT_FRONTFACE_CCW = 0x1,
  GPUCULL_BACK_FRONTFACE_CCW = 0x2,
  GPUCULL_NONE_FRONTFACE_CW = 0x4,
  GPUCULL_FRONT_FRONTFACE_CW = 0x5,
  GPUCULL_BACK_FRONTFACE_CW = 0x6,
};

/* 18828 */
struct __cppobj __declspec(align(4)) renderengine::RasterizerState::Parameters
{
  _D3DFILLMODE fillmode;
  GPUCULL cullmode;
  float depthbias;
  float slopescaledepthbias;
  unsigned int multisamplemask;
  unsigned int primitiveResetIndex;
  bool scissortestenable;
  bool multisampleantialias;
  bool viewportenable;
  bool halfpixeloffset;
  bool primitiveResetEnable;
};

/* 18829 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeUByte4N> : renderengine::VertexIteratorBaseClass
{
};

/* 18830 */
struct __cppobj renderengine::Texture::Parameters
{
  renderengine::Texture::Type type;
  unsigned int flags;
  unsigned int width;
  unsigned int height;
  unsigned int depth;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
  unsigned int address;
};

/* 18831 */
struct __cppobj renderengine::Texture::LockParameters
{
  unsigned int jobId;
  unsigned int mipLevel;
  unsigned int arrayIndex;
};

/* 150 */
enum _D3DMULTISAMPLE_TYPE : __int32
{
  D3DMULTISAMPLE_NONE = 0x0,
  D3DMULTISAMPLE_2_SAMPLES = 0x1,
  D3DMULTISAMPLE_4_SAMPLES = 0x2,
  D3DMULTISAMPLE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 18832 */
struct __cppobj renderengine::PixelBuffer::Parameters
{
  renderengine::PixelBuffer::Type type;
  unsigned int flags;
  unsigned int width;
  unsigned int height;
  renderengine::PixelFormat format;
  _D3DMULTISAMPLE_TYPE multiSampleType;
  int colorExpBias;
};

/* 198 */
enum _D3DSWAPEFFECT : __int32
{
  D3DSWAPEFFECT_DISCARD = 0x1,
  D3DSWAPEFFECT_FLIP = 0x2,
  D3DSWAPEFFECT_COPY = 0x3,
  D3DSWAPEFFECT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 6909 */
struct _D3DRECT
{
  int x1;
  int y1;
  int x2;
  int y2;
};

/* 6910 */
struct _D3DVIDEO_SCALER_PARAMETERS
{
  _D3DRECT ScalerSourceRect;
  unsigned int ScaledOutputWidth;
  unsigned int ScaledOutputHeight;
  unsigned int FilterProfile;
};

/* 18834 */
struct __cppobj renderengine::Device::Parameters
{
  unsigned int backBufferWidth;
  unsigned int backBufferHeight;
  renderengine::PixelFormat backBufferFormat;
  unsigned int frontBufferWidth;
  unsigned int frontBufferHeight;
  renderengine::PixelFormat frontBufferFormat;
  unsigned int behaviorFlags;
  _D3DMULTISAMPLE_TYPE multiSampleType;
  _D3DSWAPEFFECT swapEffect;
  renderengine::PixelFormat depthStencilFormat;
  bool depthStencilAutoCreate;
  unsigned int flags;
  unsigned int refreshRateInHz;
  unsigned int presentationInterval;
  unsigned int colorSpace;
  unsigned int primarySize;
  unsigned int secondarySize;
  unsigned int segmentCount;
  _D3DVIDEO_SCALER_PARAMETERS scaler;
};

/* 18835 */
struct __cppobj renderengine::Device
{
};

/* 6896 */
struct $BD17ED5EF6FA8CE7398C97BF41535960
{
  int HighPart;
  unsigned int LowPart;
};

/* 6895 */
struct _LARGE_INTEGER::<unnamed_tag>
{
  int HighPart;
  unsigned int LowPart;
};

/* 6897 */
union _LARGE_INTEGER
{
  $BD17ED5EF6FA8CE7398C97BF41535960 __s0;
  _LARGE_INTEGER::<unnamed_tag> u;
  __int64 QuadPart;
};

/* 18836 */
struct __cppobj renderengine::Device::TimeStamp
{
  _LARGE_INTEGER mValue;
};

/* 18837 */
struct __cppobj renderengine::Device::DirectDraw
{
};

/* 18838 */
struct __cppobj renderengine::Device::DirectDraw::BatchIterator
{
  _D3DPRIMITIVETYPE m_primType;
  D3DDevice *m_device;
};

/* 18839 */
struct __cppobj renderengine::ProgramVariableBuffer::Parameters
{
  renderengine::ProgramBuffer::Type programType;
  renderengine::ProgramVariableHandle::DataType dataType;
  unsigned int numConstants;
};

/* 18840 */
struct __cppobj renderengine::VertexDescriptor::Parameters
{
  renderengine::VertexDescriptor::Element elements[16];
  unsigned __int8 strides[16];
};

/* 18841 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeFloat1> : renderengine::VertexIteratorBaseClass
{
};

/* 18842 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeFloat3> : renderengine::VertexIteratorBaseClass
{
};

/* 18843 */
struct __cppobj renderengine::LowLevelShadowDevice : renderengine::Device
{
};

/* 18844 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState::Base
{
  bool initialized;
};

/* 18845 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState::BlendStates : renderengine::LowLevelShadowDevice::LowLevelShadowState::Base
{
  _D3DBLENDSTATE blend[4];
  unsigned int colorWriteEnable;
  unsigned int colorWriteEnable1;
  unsigned int colorWriteEnable2;
  unsigned int colorWriteEnable3;
  unsigned int alphaToMaskOffsets;
  unsigned int blendFactor;
  unsigned int alphaToMaskEnable;
  unsigned int highPrecisionBlendEnable;
  unsigned int highPrecisionBlendEnable1;
  unsigned int highPrecisionBlendEnable2;
  unsigned int highPrecisionBlendEnable3;
  unsigned int alphafunc;
  unsigned int alphatestenable;
  unsigned int alpharef;
};

/* 18846 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState::DepthStencilStates : renderengine::LowLevelShadowDevice::LowLevelShadowState::Base
{
  unsigned int zfunc;
  unsigned int stencilfail;
  unsigned int stencilzfail;
  unsigned int stencilpass;
  unsigned int stencilfunc;
  unsigned int ccw_stencilfail;
  unsigned int ccw_stencilzfail;
  unsigned int ccw_stencilpass;
  unsigned int ccw_stencilfunc;
  unsigned int histencilfunc;
  unsigned int stencilref;
  unsigned int stencilmask;
  unsigned int stencilwritemask;
  unsigned int ccw_stencilref;
  unsigned int ccw_stencilmask;
  unsigned int ccw_stencilwritemask;
  unsigned int histencilref;
  unsigned int zenable;
  unsigned int zwriteenable;
  unsigned int stencilenable;
  unsigned int twosidedstencilmode;
  unsigned int histencilenable;
  unsigned int histencilwriteenable;
};

/* 18847 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState::RasterizerStates : renderengine::LowLevelShadowDevice::LowLevelShadowState::Base
{
  unsigned int fillmode;
  unsigned int cullmode;
  unsigned int depthbias;
  unsigned int slopescaledepthbias;
  unsigned int multisamplemask;
  unsigned int scissortestenable;
  unsigned int multisampleantialias;
  unsigned int viewportenable;
  unsigned int halfpixeloffset;
  unsigned int primitiveResetEnable;
  unsigned int primitiveResetIndex;
};

/* 18848 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState::SamplerStates : renderengine::LowLevelShadowDevice::LowLevelShadowState::Base
{
  unsigned __int8 minfilter;
  unsigned __int8 minfilterz;
  unsigned __int8 magfilter;
  unsigned __int8 magfilterz;
  unsigned __int8 separatezfilterenable;
  unsigned __int8 maxanisotropy;
  unsigned __int8 maxmiplevel;
  unsigned __int8 minmiplevel;
  float mipmaplodbias;
  float anisotropybias;
};

/* 18849 */
struct __cppobj renderengine::LowLevelShadowDevice::LowLevelShadowState
{
  renderengine::LowLevelShadowDevice::LowLevelShadowState::BlendStates blendStates;
  renderengine::LowLevelShadowDevice::LowLevelShadowState::DepthStencilStates depthStencilStates;
  renderengine::LowLevelShadowDevice::LowLevelShadowState::RasterizerStates rasterizerStates;
  renderengine::LowLevelShadowDevice::LowLevelShadowState::SamplerStates samplerStates[30];
};

/* 18850 */
struct __cppobj renderengine::MeshHelper::Parameters
{
  renderengine::IndexBuffer *indexBuffers[1];
  renderengine::VertexBuffer *vertexBuffers[16];
};

/* 18851 */
struct __cppobj renderengine::StateHelper
{
};

/* 18852 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeColor> : renderengine::VertexIteratorBaseClass
{
};

/* 18380 */
struct old_datacontainer::BatchIteratorWrite<renderengine::StateBuffer,2147483648>
{
  renderengine::StateBuffer *mContainer;
  void *mWrite;
  unsigned int mJobId;
};

/* 15133 */
struct __cppobj rw::BaseResources<5>
{
  void *m_baseResources[5];
};

/* 15134 */
struct __cppobj rw::Resource : rw::BaseResources<5>
{
};

/* 15129 */
struct __cppobj rw::BaseResourceDescriptor
{
  unsigned int m_size;
  unsigned int m_alignment;
};

/* 15130 */
struct __cppobj rw::BaseResourceDescriptors<5>
{
  rw::BaseResourceDescriptor m_baseResourceDescriptors[5];
};

/* 15131 */
struct __cppobj rw::ResourceDescriptor : rw::BaseResourceDescriptors<5>
{
};

/* 18853 */
struct __cppobj renderengine::StateCompilerDevice
{
  old_datacontainer::BatchIteratorWrite<renderengine::StateBuffer,2147483648> m_batchWriter;
  renderengine::IteratorWrite m_dataWriter;
  rw::Resource m_initialResource;
  rw::ResourceDescriptor m_initialResourceDescriptor;
  void *m_pSize;
};

/* 34 */
enum _D3DTEXTUREADDRESS : __int32
{
  D3DTADDRESS_WRAP = 0x0,
  D3DTADDRESS_MIRROR = 0x1,
  D3DTADDRESS_CLAMP = 0x2,
  D3DTADDRESS_MIRRORONCE = 0x3,
  D3DTADDRESS_BORDER_HALF = 0x4,
  D3DTADDRESS_MIRRORONCE_BORDER_HALF = 0x5,
  D3DTADDRESS_BORDER = 0x6,
  D3DTADDRESS_MIRRORONCE_BORDER = 0x7,
  D3DTADDRESS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 77 */
enum _D3DTEXTUREFILTERTYPE : __int32
{
  D3DTEXF_NONE = 0x2,
  D3DTEXF_POINT = 0x0,
  D3DTEXF_LINEAR = 0x1,
  D3DTEXF_ANISOTROPIC = 0x4,
  D3DTEXF_FORCE_DWORD = 0x7FFFFFFF,
};

/* 78 */
enum _D3DTRILINEARTHRESHOLD : __int32
{
  D3DTRILINEAR_IMMEDIATE = 0x0,
  D3DTRILINEAR_ONESIXTH = 0x1,
  D3DTRILINEAR_ONEFOURTH = 0x2,
  D3DTRILINEAR_THREEEIGHTHS = 0x3,
  D3DTRILINEAR_FORCE_DWORD = 0x7FFFFFFF,
};

/* 18854 */
struct __cppobj __declspec(align(4)) renderengine::SamplerState::Parameters
{
  _D3DTEXTUREADDRESS addressU;
  _D3DTEXTUREADDRESS addressV;
  _D3DTEXTUREADDRESS addressW;
  _D3DTEXTUREFILTERTYPE magfilter;
  _D3DTEXTUREFILTERTYPE minfilter;
  _D3DTEXTUREFILTERTYPE mipfilter;
  _D3DTEXTUREFILTERTYPE magfilterz;
  _D3DTEXTUREFILTERTYPE minfilterz;
  unsigned int minmiplevel;
  unsigned int maxmiplevel;
  unsigned int maxanisotropy;
  float mipmaplodbias;
  float anisotropybias;
  int hgradientexpbias;
  int vgradientexpbias;
  _D3DTRILINEARTHRESHOLD trilinearthreshold;
  bool bordercolorWhite;
  bool separatezfilterenable;
  bool whitebordercolorw;
  bool pointborderenable;
  bool srgbtexture;
};

/* 18855 */
struct __cppobj __declspec(align(2)) renderengine::BlendState::Parameters
{
  _D3DBLENDSTATE blend[4];
  _D3DCMPFUNC alphafunc;
  unsigned int colorWriteEnable;
  unsigned int colorWriteEnable1;
  unsigned int colorWriteEnable2;
  unsigned int colorWriteEnable3;
  unsigned int alphaToMaskOffsets;
  unsigned int alpharef;
  unsigned int blendFactor;
  bool alphaBlendEnable;
  bool alphaToMaskEnable;
  bool highPrecisionBlendEnable;
  bool highPrecisionBlendEnable1;
  bool highPrecisionBlendEnable2;
  bool highPrecisionBlendEnable3;
  bool alphatestenable;
};

/* 18856 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeUByte4> : renderengine::VertexIteratorBaseClass
{
};

/* 18857 */
struct renderengine::FloatShaderStateIterator4
{
  rw::math::vpu::Vector4 *m_destCached;
  rw::math::vpu::Vector4 *m_destWC;
  int m_numConstantsToWrite;
};

/* 18858 */
struct __cppobj renderengine::VertexProgramStateFactory::Parameters
{
  rw::ResourceDescriptor resourceDescriptor;
  unsigned int maxNumStates;
};

/* 18859 */
struct renderengine::VertexProgramStateFactory::StateDescriptor
{
  const renderengine::VertexDescriptor *m_vertexDescriptor;
  const renderengine::ProgramBuffer *m_programBuffer;
  renderengine::VertexProgramState *m_state;
};

/* 18860 */
struct __cppobj renderengine::VertexProgramStateFactory
{
  rw::ResourceDescriptor m_resourceDescriptor;
  rw::ResourceDescriptor m_remainingResourceDescriptor;
  rw::Resource m_remainingResource;
  unsigned int m_maxNumStates;
  unsigned int m_currentNumStates;
  renderengine::VertexProgramStateFactory::StateDescriptor m_vertexProgramStates[1];
};

/* 18861 */
struct __cppobj renderengine::Texture3D::Parameters
{
  unsigned int flags;
  unsigned int width;
  unsigned int height;
  unsigned int depth;
  unsigned int mipLevels;
  renderengine::PixelFormat format;
};

/* 18862 */
struct __cppobj renderengine::Texture3D : renderengine::Texture
{
};

/* 18863 */
struct __cppobj renderengine::RenderTargetState::Parameters
{
  renderengine::PixelBuffer *renderTargets[4];
  renderengine::PixelBuffer *depthStencil;
};

/* 24695 */
struct __cppobj renderengine::VertexIterator2<renderengine::VertexTypeFloat3,renderengine::VertexTypeFloat2> : renderengine::VertexIteratorBaseClass
{
};

/* 25077 */
struct renderengine::postfx::RenderTargetRects
{
  int mViewport_Width;
  int mViewport_Height;
  int mNumSamples;
  int mNumRects;
  _D3DRECT mRects[8];
};

/* 25078 */
struct __cppobj __declspec(align(4)) renderengine::postfx::Target
{
  rw::IResourceAllocator *m_pAllocator;
  renderengine::PixelBuffer *m_pCurrentPixelBuffer;
  renderengine::PixelBuffer *m_pPixelBuffer1XMSAA;
  renderengine::PixelBuffer *m_pPixelBuffer2XMSAA;
  renderengine::PixelBuffer *m_pPixelBuffer4XMSAA;
  renderengine::Texture *m_pTexture;
  renderengine::SamplerState *m_pSamplerState;
  renderengine::SamplerState *m_pSamplerState_Wrap;
  renderengine::SamplerState *m_pSamplerState_Border;
  renderengine::Texture *m_pStencilTexture;
  bool m_bIsShared;
};

/* 14873 */
struct __cppobj EA::Allocator::ICoreAllocator
{
  EA::Allocator::ICoreAllocator_vtbl *__vftable /*VFT*/;
};

/* 15538 */
struct __cppobj rw::IResourceAllocator : EA::Allocator::ICoreAllocator
{
};

/* 14874 */
struct /*VFT*/ EA::Allocator::ICoreAllocator_vtbl
{
  void (__cdecl *~ICoreAllocator)(EA::Allocator::ICoreAllocator *this);
  void *(__cdecl *Alloc)(EA::Allocator::ICoreAllocator *this, unsigned int, const char *, unsigned int, unsigned int, unsigned int);
  void *(__cdecl *Alloc)(EA::Allocator::ICoreAllocator *this, unsigned int, const char *, unsigned int);
  void (__cdecl *Free)(EA::Allocator::ICoreAllocator *this, void *, unsigned int);
};

/* 25079 */
struct __cppobj renderengine::postfx::RenderTarget
{
  rw::IResourceAllocator *m_allocator;
  unsigned int m_width;
  unsigned int m_height;
  renderengine::PixelFormat m_format;
  renderengine::postfx::RenderTarget::RenderTargetMode m_colorMode;
  renderengine::postfx::RenderTarget::RenderTargetMode m_depthStencilMode;
  bool m_bUseDepthStencilAsTexture;
  int m_MSAAMode;
  renderengine::postfx::RenderTargetRects *mp_CurrRect;
  renderengine::postfx::RenderTargetRects m_Rect1XMSAA;
  renderengine::postfx::RenderTargetRects m_Rect2XMSAA;
  renderengine::postfx::RenderTargetRects m_Rect4XMSAA;
  renderengine::RenderTargetState *m_CurrRTState;
  renderengine::RenderTargetState *m_rtState1XMSAA;
  renderengine::RenderTargetState *m_rtState2XMSAA;
  renderengine::RenderTargetState *m_rtState4XMSAA;
  renderengine::postfx::Target m_colorTargets[4];
  renderengine::postfx::Target m_depthStencilTarget;
};

/* 26877 */
struct __cppobj renderengine::postfx::Target::Parameters
{
  rw::IResourceAllocator *m_pAllocator;
  unsigned int m_u32RTWidth;
  unsigned int m_u32RTHeight;
  unsigned int m_u32RTPitch;
  unsigned int m_u32TextureWidth;
  unsigned int m_u32TextureHeight;
  renderengine::PixelFormat m_BufferFormat;
  renderengine::PixelFormat m_TextureFormat;
  unsigned int m_u32MultiSampleFormat;
  renderengine::SamplerState::FilterMode m_FilterMode;
  bool m_bUseStencil;
  int m_n32BaseEDRAM;
  int m_n32HierarchicalZAddress;
  bool m_bSystemMemory;
  void *m_pBufferAddress;
  bool m_bAutoTile;
  char m_zCullIndex;
  int m_zCullAddress;
  renderengine::postfx::RenderTargetRects *mp_Rect1XMSAA;
  renderengine::postfx::RenderTargetRects *mp_Rect2XMSAA;
  renderengine::postfx::RenderTargetRects *mp_Rect4XMSAA;
};

/* 26878 */
struct __cppobj renderengine::postfx::RenderTarget::Parameters
{
  rw::IResourceAllocator *m_pAllocator;
  unsigned int m_u32Width;
  unsigned int m_u32Height;
  unsigned int m_u32Pitch;
  unsigned int m_u32NumMipMaps;
  renderengine::postfx::RenderTarget::RenderTargetMode m_ColorMode;
  renderengine::postfx::RenderTarget::RenderTargetMode m_DepthStencilMode;
  bool m_bUseDepthStencilAsTexture;
  renderengine::postfx::Target::Parameters m_aColorTargetParams[4];
  renderengine::postfx::Target::Parameters m_DepthStencilParams;
  renderengine::postfx::Target *m_apProvidedColorTarget[4];
  renderengine::postfx::Target *m_pProvidedDepthStencilTarget;
  renderengine::postfx::RenderTargetRects m_Rect1XMSAA;
  renderengine::postfx::RenderTargetRects m_Rect2XMSAA;
  renderengine::postfx::RenderTargetRects m_Rect4XMSAA;
};

/* 26879 */
struct renderengine::postfx::resolve_RECT
{
  int src_x1;
  int src_x2;
  int src_y1;
  int src_y2;
  int dst_x;
  int dst_y;
};

/* 26880 */
struct __cppobj renderengine::postfx::RenderTargetDebugger
{
  renderengine::VertexDescriptor *m_quadVertexDescriptor;
  renderengine::ProgramBuffer *m_quadVertexProgram;
  renderengine::ProgramBuffer *m_quadPixelProgram;
  renderengine::VertexProgramState *m_quadVertexProgramState;
};

/* 26882 */
struct __cppobj renderengine::postfx::PfxHelper::Parameters
{
  rw::IResourceAllocator *allocator;
};

/* 26883 */
struct __cppobj renderengine::postfx::PfxHelper
{
  rw::IResourceAllocator *m_allocator;
  renderengine::VertexDescriptor *m_quadVertexDescriptor;
  renderengine::VertexBuffer *m_quadVertexBuffer;
  renderengine::DrawParameters *m_quadDrawParams;
  renderengine::DepthStencilState *m_quadDepthStencilState;
  renderengine::RasterizerState *m_quadRasterizerState;
  renderengine::ProgramBuffer *m_quadTransformVertexProgram;
  renderengine::VertexProgramState *m_quadTransformVertexProgramState;
  renderengine::VertexDescriptor *m_boxVertexDescriptor;
  renderengine::VertexBuffer *m_boxVertexBuffer;
  renderengine::IndexBuffer *m_boxIndexBuffer;
  renderengine::RasterizerState *m_boxRasterizerState;
  renderengine::ProgramBuffer *m_quadVertexProgram;
  renderengine::ProgramVariableHandle m_uvOffsetHandle;
  renderengine::ProgramBuffer *m_quadMotionBlurVertexProgram;
  renderengine::VertexProgramState *m_quadMotionBlurVertexProgramState;
  renderengine::ProgramVariableHandle m_quadMotionBlur_XXX_Handle;
  renderengine::ProgramVariableHandle m_quadMotionBlur_YYY_Handle;
  renderengine::ProgramVariableHandle m_quadMotionBlur_WWW_Handle;
  renderengine::ProgramVariableHandle m_quadMotionBlur_uvOffsetHandle;
  renderengine::VertexProgramState *m_quadVertexProgramState;
  renderengine::ProgramVariableHandle m_QuadTransform_PosScale_Handle;
  renderengine::ProgramVariableHandle m_QuadTransform_PosTrans_Handle;
  renderengine::ProgramVariableHandle m_QuadTransform_UVTrans_Handle;
  renderengine::ProgramVariableHandle m_QuadTransform_UVScale_Handle;
  renderengine::ProgramBuffer *m_boxVertexProgram;
  renderengine::VertexProgramState *m_boxVertexProgramState;
  renderengine::ProgramVariableHandle m_boxMatrix_row1_Handle;
  renderengine::ProgramVariableHandle m_boxMatrix_row2_Handle;
  renderengine::ProgramVariableHandle m_boxMatrix_row3_Handle;
  renderengine::ProgramVariableHandle m_boxMatrix_row4_Handle;
  renderengine::ProgramBuffer *m_9tapPixelProgram;
  renderengine::ProgramVariableHandle m_blur9SamplesHandle[3];
  renderengine::ProgramVariableHandle m_blur9DirectionHandle;
  renderengine::ProgramVariableHandle m_blur9Multiply;
  renderengine::ProgramBuffer *m_9tapdofPixelProgram;
  renderengine::ProgramVariableHandle m_blur9dofSamplesHandle[3];
  renderengine::ProgramVariableHandle m_blur9dof_COC;
  renderengine::ProgramVariableHandle m_blur9dof_BlurMatrixZZZ;
  renderengine::ProgramVariableHandle m_blur9dof_Motion_Intensity;
  renderengine::ProgramVariableHandle m_blur9dof_CamInfoX;
  renderengine::ProgramVariableHandle m_blur9dof_CamInfoY;
  renderengine::ProgramBuffer *m_9tapdofmotionblurPixelProgram;
  renderengine::ProgramVariableHandle m_blur9dofmotionblurSamplesHandle[3];
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_BlurMatrixZZZ;
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_Motion_Intensity;
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_WeightsHandle[3];
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_OffsetsHandle[3];
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_CamInfoX;
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_CamInfoY;
  renderengine::ProgramVariableHandle m_blur9dofmotionblur_COC;
  renderengine::ProgramBuffer *m_9tapmotionblurPixelProgram;
  renderengine::ProgramVariableHandle m_blur9motionblurSamplesHandle[3];
  renderengine::ProgramVariableHandle m_blur9motionblur_BlurMatrixZZZ;
  renderengine::ProgramVariableHandle m_blur9motionblur_Motion_Intensity;
  renderengine::ProgramVariableHandle m_blur9motionblur_CamInfoX;
  renderengine::ProgramVariableHandle m_blur9motionblur_CamInfoY;
  renderengine::ProgramBuffer *m_16tapPixelProgram;
  renderengine::ProgramVariableHandle m_blur16SamplesHandle[4];
  renderengine::ProgramBuffer *m_4tapPixelProgram;
  renderengine::ProgramVariableHandle m_blur4SamplesHandle;
  renderengine::ProgramBuffer *m_4tapthresholdPixelProgram;
  renderengine::ProgramVariableHandle m_blur4SamplesthresholdsHandle;
  renderengine::BlendState *m_opaqueBlendState;
  renderengine::ProgramBuffer *m_textureProgram;
  renderengine::ProgramBuffer *m_textureFisheyeProgram;
  renderengine::ProgramBuffer *m_showalphaProgram;
  renderengine::ProgramVariableHandle m_TextureHandle;
};

/* 25692 */
struct __cppobj rw::graphics::imageoperate::ISupportedFormats
{
  rw::graphics::imageoperate::ISupportedFormats_vtbl *__vftable /*VFT*/;
};

/* 29712 */
struct __cppobj renderengine::TextureFormatInfo::TextureCompatibleSupportedFormats : rw::graphics::imageoperate::ISupportedFormats
{
  int mNumImageTypes;
};

/* 3981 */
enum rw::graphics::imageoperate::Image::Format : __int32
{
  FORMAT_NA = 0x0,
  FORMAT_A16B16G16R16 = 0x10004140,
  FORMAT_A16B16G16R16F = 0x11014340,
  FORMAT_A16L16 = 0x12008120,
  FORMAT_A16R16G16B16 = 0x13004140,
  FORMAT_A1B5G5R5 = 0x14004110,
  FORMAT_A1R5G5B5 = 0x15004110,
  FORMAT_A2B10G10R10 = 0x16008120,
  FORMAT_A2R10G10B10 = 0x17008120,
  FORMAT_A2W10V10U10 = 0x18008120,
  FORMAT_A32B32G32R32F = 0x19018380,
  FORMAT_A32R32G32B32F = 0x1A018380,
  FORMAT_A4L4 = 0x1B000108,
  FORMAT_A4R4G4B4 = 0x1C004110,
  FORMAT_A8 = 0x1D000108,
  FORMAT_A8B8G8R8 = 0x1E008120,
  FORMAT_A8L8 = 0x1F004110,
  FORMAT_A8P8 = 0x20044110,
  FORMAT_A8R3G3B2 = 0x21004110,
  FORMAT_A8R8G8B8 = 0x22008120,
  FORMAT_B8G8R8 = 0x23000018,
  FORMAT_B8G8R8A8 = 0x24008120,
  FORMAT_CTX1 = 0x84134004,
  FORMAT_CxV8U8 = 0x25004210,
  FORMAT_D15S1 = 0x26004010,
  FORMAT_D16 = 0x27004010,
  FORMAT_D24FS8 = 0x28018020,
  FORMAT_D24S8 = 0x29008020,
  FORMAT_D24X4S4 = 0x2A008020,
  FORMAT_D24X8 = 0x2B008020,
  FORMAT_D32 = 0x2C008020,
  FORMAT_DXN = 0x2D034008,
  FORMAT_DXT1 = 0x2E034004,
  FORMAT_DXT1_SWAPPED = 0x80034004,
  FORMAT_DXT2 = 0x2F034108,
  FORMAT_DXT2_SWAPPED = 0x81034108,
  FORMAT_DXT3 = 0x30034108,
  FORMAT_DXT3_SWAPPED = 0x82034108,
  FORMAT_DXT3A = 0x30134104,
  FORMAT_DXT3A_1111 = 0x30234104,
  FORMAT_DXT4 = 0x31034108,
  FORMAT_DXT4_SWAPPED = 0x83034108,
  FORMAT_DXT5 = 0x32034108,
  FORMAT_DXT5_SWAPPED = 0x84034108,
  FORMAT_DXT5A = 0x32134104,
  FORMAT_F16 = 0x33014010,
  FORMAT_F24S8 = 0x34018020,
  FORMAT_G16R16 = 0x35008020,
  FORMAT_G16R16F = 0x36018220,
  FORMAT_G32R32F = 0x37018240,
  FORMAT_G8B8 = 0x38004010,
  FORMAT_G8R8 = 0x39004010,
  FORMAT_G8R8_G8B8 = 0x3A004020,
  FORMAT_INDEX16 = 0x3B044010,
  FORMAT_INDEX32 = 0x3C048020,
  FORMAT_L16 = 0x3D004010,
  FORMAT_L1 = 0x3E000001,
  FORMAT_L4 = 0x3F000004,
  FORMAT_L6V5U5 = 0x40004010,
  FORMAT_L8 = 0x41000008,
  FORMAT_MULTI2_ARGB8 = 0x42004140,
  FORMAT_P4 = 0x43040104,
  FORMAT_P4HH = 0x44048020,
  FORMAT_P4HL = 0x45048020,
  FORMAT_P8 = 0x46040108,
  FORMAT_P8H = 0x47048020,
  FORMAT_Q16W16V16U16 = 0x48004040,
  FORMAT_Q4W4V4U4 = 0x49004010,
  FORMAT_Q8W8V8U8 = 0x4A008020,
  FORMAT_R16F = 0x4B014210,
  FORMAT_R32F = 0x4C018220,
  FORMAT_R3G3B2 = 0x4D000008,
  FORMAT_R4G4B4 = 0x4E00000C,
  FORMAT_R4G4B4A4 = 0x4F004110,
  FORMAT_R5G5B5A1 = 0x50004110,
  FORMAT_R5G6B5 = 0x51004010,
  FORMAT_R6G5B5 = 0x52004010,
  FORMAT_R8B8 = 0x53004010,
  FORMAT_R8G8_B8G8 = 0x54004020,
  FORMAT_R8G8B8 = 0x55000018,
  FORMAT_R8G8B8A8 = 0x56008120,
  FORMAT_UYVY = 0x57004020,
  FORMAT_V16U16 = 0x58008220,
  FORMAT_V8U8 = 0x59004210,
  FORMAT_X1R5G5B5 = 0x5A004010,
  FORMAT_X4R4G4B4 = 0x5B004010,
  FORMAT_X8B8G8R8 = 0x5C008020,
  FORMAT_X8L8V8U8 = 0x5D008020,
  FORMAT_X8R8G8B8 = 0x5E008020,
  FORMAT_YUY2 = 0x5F004020,
  FORMAT_YV12 = 0x60000020,
  FORMAT_Z16 = 0x61004010,
  FORMAT_Z24 = 0x62000020,
  FORMAT_Z32 = 0x63008020,
  FORMAT_FORCEENUMSIZEINT = 0x7FFFFFFF,
};

/* 25693 */
struct /*VFT*/ rw::graphics::imageoperate::ISupportedFormats_vtbl
{
  void (__cdecl *~ISupportedFormats)(rw::graphics::imageoperate::ISupportedFormats *this);
  bool (__cdecl *IsSupported)(rw::graphics::imageoperate::ISupportedFormats *this, const rw::graphics::imageoperate::Image::Format *);
  int (__cdecl *GetNumImageTypes)(rw::graphics::imageoperate::ISupportedFormats *this);
  rw::graphics::imageoperate::Image::Format (__cdecl *GetImageType)(rw::graphics::imageoperate::ISupportedFormats *this, int);
};

/* 29713 */
struct /*VFT*/ renderengine::TextureFormatInfo::TextureCompatibleSupportedFormats_vtbl
{
  void (__cdecl *~ISupportedFormats)(rw::graphics::imageoperate::ISupportedFormats *this);
  bool (__cdecl *IsSupported)(rw::graphics::imageoperate::ISupportedFormats *this, const rw::graphics::imageoperate::Image::Format *);
  int (__cdecl *GetNumImageTypes)(rw::graphics::imageoperate::ISupportedFormats *this);
  rw::graphics::imageoperate::Image::Format (__cdecl *GetImageType)(rw::graphics::imageoperate::ISupportedFormats *this, int);
};

/* 29714 */
struct __cppobj renderengine::TextureFormatInfo
{
};

/* 29719 */
struct __cppobj renderengine::VertexIterator2<renderengine::VertexTypeFloat3,renderengine::VertexTypeFloat4> : renderengine::VertexIteratorBaseClass
{
};

/* 29786 */
struct __cppobj renderengine::VertexIterator2<renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat2> : renderengine::VertexIteratorBaseClass
{
};

/* 29787 */
struct __cppobj renderengine::VertexIterator2<renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4> : renderengine::VertexIteratorBaseClass
{
};

/* 29788 */
struct __cppobj renderengine::VertexIterator3<renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat2> : renderengine::VertexIteratorBaseClass
{
};

/* 29789 */
struct __cppobj renderengine::VertexIterator3<renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4> : renderengine::VertexIteratorBaseClass
{
};

/* 29790 */
struct __cppobj renderengine::VertexIterator4<renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat4,renderengine::VertexTypeFloat2> : renderengine::VertexIteratorBaseClass
{
};

/* 29791 */
struct __cppobj renderengine::VertexIterator<unsigned int> : renderengine::VertexIteratorBaseClass
{
};

/* 29824 */
struct __cppobj renderengine::VertexIterator5<renderengine::VertexTypeFloat1,renderengine::VertexTypeFloat1,renderengine::VertexTypeFloat1,renderengine::VertexTypeFloat1,renderengine::VertexTypeFloat1> : renderengine::VertexIteratorBaseClass
{
};

/* 34202 */
struct renderengine::VertexTypeColor
{
  unsigned __int8 pad[4];
};

/* 34203 */
struct renderengine::VertexTypeFloat4
{
  unsigned __int8 pad[16];
};

/* 34204 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeUShort4N> : renderengine::VertexIteratorBaseClass
{
};

/* 34205 */
struct renderengine::VertexTypeUByte4N
{
  unsigned __int8 pad[4];
};

/* 34206 */
struct renderengine::VertexTypeUShort4N
{
  unsigned __int8 pad[8];
};

/* 34207 */
struct renderengine::VertexTypeShort2N
{
  unsigned __int8 pad[4];
};

/* 34208 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeShort4N> : renderengine::VertexIteratorBaseClass
{
};

/* 34209 */
struct renderengine::VertexTypeShort4N
{
  unsigned __int8 pad[8];
};

/* 34210 */
struct renderengine::VertexTypeUDec3
{
  unsigned __int8 pad[4];
};

/* 34211 */
struct renderengine::VertexTypeShort2
{
  unsigned __int8 pad[4];
};

/* 34212 */
struct renderengine::VertexTypeDec3N
{
  unsigned __int8 pad[4];
};

/* 34213 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeUDec3> : renderengine::VertexIteratorBaseClass
{
};

/* 34214 */
struct renderengine::VertexTypeFloat1
{
  unsigned __int8 pad[4];
};

/* 34215 */
struct renderengine::VertexTypeUByte4
{
  unsigned __int8 pad[4];
};

/* 34216 */
struct __cppobj renderengine::PixelBufferHelper : renderengine::PixelBuffer
{
};

/* 34217 */
struct renderengine::VertexTypeFloat2
{
  unsigned __int8 pad[8];
};

/* 34218 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeUShort2N> : renderengine::VertexIteratorBaseClass
{
};

/* 34219 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeDec3N> : renderengine::VertexIteratorBaseClass
{
};

/* 34220 */
struct __cppobj renderengine::TextureHelper : renderengine::Texture
{
};

/* 34221 */
struct renderengine::VertexTypeShort4
{
  unsigned __int8 pad[8];
};

/* 34222 */
struct renderengine::VertexTypeFloat3
{
  unsigned __int8 pad[12];
};

/* 34223 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeShort4> : renderengine::VertexIteratorBaseClass
{
};

/* 34224 */
struct renderengine::VertexTypeUShort2N
{
  unsigned __int8 pad[4];
};

/* 34225 */
struct renderengine::VertexTypeD3DColor
{
  unsigned __int8 pad[4];
};

/* 34226 */
struct __cppobj renderengine::VertexIterator<renderengine::VertexTypeShort2N> : renderengine::VertexIteratorBaseClass
{
};

/* 38181 */
struct renderengine::ElementTypeParams
{
  unsigned __int8 usage;
  unsigned __int8 usageIndex;
};

/* 38210 */
struct renderengine::GpuProfiler::Parameters
{
  unsigned int numBuffers;
  unsigned int numMonitors;
};

/* 38211 */
struct renderengine::GpuProfiler
{
  float m_waveLength;
  renderengine::GpuProfiler::Parameters m_parameters;
  unsigned int m_bufferIndex;
  renderengine::Device::TimeStamp *m_timeStamps;
};

/* 38212 */
struct renderengine::TextureFormatInfoInternalData
{
  rw::graphics::imageoperate::Image::Format imageFormat;
  renderengine::PixelFormat pixelFormatTiled;
  renderengine::PixelFormat pixelFormatLinear;
};

